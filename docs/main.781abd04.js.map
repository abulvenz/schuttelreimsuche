{"version":3,"sources":["node_modules/mithril/render/vnode.js","node_modules/mithril/render/hyperscriptVnode.js","node_modules/mithril/render/hyperscript.js","node_modules/mithril/render/trust.js","node_modules/mithril/render/fragment.js","node_modules/mithril/hyperscript.js","node_modules/mithril/promise/polyfill.js","node_modules/mithril/promise/promise.js","node_modules/mithril/render/render.js","node_modules/mithril/render.js","node_modules/mithril/api/mount-redraw.js","node_modules/mithril/mount-redraw.js","node_modules/mithril/querystring/build.js","node_modules/mithril/pathname/assign.js","node_modules/mithril/pathname/build.js","node_modules/mithril/request/request.js","node_modules/mithril/request.js","node_modules/mithril/querystring/parse.js","node_modules/mithril/pathname/parse.js","node_modules/mithril/pathname/compileTemplate.js","node_modules/mithril/api/router.js","node_modules/mithril/route.js","node_modules/mithril/index.js","node_modules/tagl/index.js","node_modules/tagl-mithril/lib/index.js","tags.js","node_modules/typo-js/typo.js","f.js","solver.js","main.js"],"names":["tagl","noop","h","createProxy","tagName","Proxy","apply","_","__","args","get","className","classNames","proxy","push","___","component","components","annotationXml","m","a","abbr","acronym","address","applet","area","article","aside","audio","b","base","basefont","bdi","bdo","big","blockquote","body","br","button","canvas","caption","center","cite","code","col","colgroup","datalist","dd","del","details","dfn","dir","div","dl","dt","em","embed","fieldset","figcaption","figure","font","footer","form","frame","frameset","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","map","mark","menu","meta","meter","nav","noframes","noscript","object","ol","optgroup","option","output","p","param","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strike","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","tr","track","tt","u","ul","var_","video","wbr","animate","animateMotion","animateTransform","circle","clipPath","colorProfile","defs","desc","discard","ellipse","feBlend","feColorMatrix","feComponentTransfer","feComposite","feConvolveMatrix","feDiffuseLighting","feDisplacementMap","feDistantLight","feDropShadow","feFlood","feFuncA","feFuncB","feFuncG","feFuncR","feGaussianBlur","feImage","feMerge","feMergeNode","feMorphology","feOffset","fePointLight","feSpecularLighting","feSpotLight","feTile","feTurbulence","filter","foreignObject","g","hatch","hatchpath","image","line","linearGradient","marker","mask","mesh","meshgradient","meshpatch","meshrow","metadata","mpath","path","pattern","polygon","polyline","radialGradient","rect","set","solidcolor","stop","svg","switch_","symbol","text","textPath","tspan","unknown","use","view","math","maction","maligngroup","malignmark","menclose","merror","mfenced","mfrac","mglyph","mi","mlabeledtr","mlongdiv","mmultiscripts","mn","mo","mover","mpadded","mphantom","mroot","mrow","ms","mscarries","mscarry","msgroup","msline","mspace","msqrt","msrow","mstack","mstyle","msub","msup","msubsup","mtable","mtd","mtext","mtr","munder","munderover","semantics","annotation","rangeIncl","S","E","result","unique","arr","Object","keys","reduce","acc","v","f","flatMap","e","x","concat","hasVowel","str","test","reverse","substring","length","sqrt","Math","trunc","min","max","callbacks","dictionary","words","complete","setTimeout","fetch","aff","then","json","aff_text","dic","dic_text","Typo","dictionaryTable","toUpperCase","toLowerCase","indexOf","forEach","cb","redraw","ready","whenReady","byRest","shuttle","logs","firstWord","secondWord","selected","selected2","showing","log","unshift","split","word","search","pos","begin","rest","toRest","solver","mount","document","vnode","container","for","$rhyme1","oninput","target","value","disabled","onclick","key","begins","undefined","$words","e_","join","href"],"mappings":"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","file":"main.781abd04.js","sourceRoot":"..","sourcesContent":["\"use strict\"\n\nfunction Vnode(tag, key, attrs, children, text, dom) {\n\treturn {tag: tag, key: key, attrs: attrs, children: children, text: text, dom: dom, domSize: undefined, state: undefined, events: undefined, instance: undefined}\n}\nVnode.normalize = function(node) {\n\tif (Array.isArray(node)) return Vnode(\"[\", undefined, undefined, Vnode.normalizeChildren(node), undefined, undefined)\n\tif (node == null || typeof node === \"boolean\") return null\n\tif (typeof node === \"object\") return node\n\treturn Vnode(\"#\", undefined, undefined, String(node), undefined, undefined)\n}\nVnode.normalizeChildren = function(input) {\n\tvar children = []\n\tif (input.length) {\n\t\tvar isKeyed = input[0] != null && input[0].key != null\n\t\t// Note: this is a *very* perf-sensitive check.\n\t\t// Fun fact: merging the loop like this is somehow faster than splitting\n\t\t// it, noticeably so.\n\t\tfor (var i = 1; i < input.length; i++) {\n\t\t\tif ((input[i] != null && input[i].key != null) !== isKeyed) {\n\t\t\t\tthrow new TypeError(\"Vnodes must either always have keys or never have keys!\")\n\t\t\t}\n\t\t}\n\t\tfor (var i = 0; i < input.length; i++) {\n\t\t\tchildren[i] = Vnode.normalize(input[i])\n\t\t}\n\t}\n\treturn children\n}\n\nmodule.exports = Vnode\n","\"use strict\"\n\nvar Vnode = require(\"../render/vnode\")\n\n// Call via `hyperscriptVnode.apply(startOffset, arguments)`\n//\n// The reason I do it this way, forwarding the arguments and passing the start\n// offset in `this`, is so I don't have to create a temporary array in a\n// performance-critical path.\n//\n// In native ES6, I'd instead add a final `...args` parameter to the\n// `hyperscript` and `fragment` factories and define this as\n// `hyperscriptVnode(...args)`, since modern engines do optimize that away. But\n// ES5 (what Mithril requires thanks to IE support) doesn't give me that luxury,\n// and engines aren't nearly intelligent enough to do either of these:\n//\n// 1. Elide the allocation for `[].slice.call(arguments, 1)` when it's passed to\n//    another function only to be indexed.\n// 2. Elide an `arguments` allocation when it's passed to any function other\n//    than `Function.prototype.apply` or `Reflect.apply`.\n//\n// In ES6, it'd probably look closer to this (I'd need to profile it, though):\n// module.exports = function(attrs, ...children) {\n//     if (attrs == null || typeof attrs === \"object\" && attrs.tag == null && !Array.isArray(attrs)) {\n//         if (children.length === 1 && Array.isArray(children[0])) children = children[0]\n//     } else {\n//         children = children.length === 0 && Array.isArray(attrs) ? attrs : [attrs, ...children]\n//         attrs = undefined\n//     }\n//\n//     if (attrs == null) attrs = {}\n//     return Vnode(\"\", attrs.key, attrs, children)\n// }\nmodule.exports = function() {\n\tvar attrs = arguments[this], start = this + 1, children\n\n\tif (attrs == null) {\n\t\tattrs = {}\n\t} else if (typeof attrs !== \"object\" || attrs.tag != null || Array.isArray(attrs)) {\n\t\tattrs = {}\n\t\tstart = this\n\t}\n\n\tif (arguments.length === start + 1) {\n\t\tchildren = arguments[start]\n\t\tif (!Array.isArray(children)) children = [children]\n\t} else {\n\t\tchildren = []\n\t\twhile (start < arguments.length) children.push(arguments[start++])\n\t}\n\n\treturn Vnode(\"\", attrs.key, attrs, children)\n}\n","\"use strict\"\n\nvar Vnode = require(\"../render/vnode\")\nvar hyperscriptVnode = require(\"./hyperscriptVnode\")\n\nvar selectorParser = /(?:(^|#|\\.)([^#\\.\\[\\]]+))|(\\[(.+?)(?:\\s*=\\s*(\"|'|)((?:\\\\[\"'\\]]|.)*?)\\5)?\\])/g\nvar selectorCache = {}\nvar hasOwn = {}.hasOwnProperty\n\nfunction isEmpty(object) {\n\tfor (var key in object) if (hasOwn.call(object, key)) return false\n\treturn true\n}\n\nfunction compileSelector(selector) {\n\tvar match, tag = \"div\", classes = [], attrs = {}\n\twhile (match = selectorParser.exec(selector)) {\n\t\tvar type = match[1], value = match[2]\n\t\tif (type === \"\" && value !== \"\") tag = value\n\t\telse if (type === \"#\") attrs.id = value\n\t\telse if (type === \".\") classes.push(value)\n\t\telse if (match[3][0] === \"[\") {\n\t\t\tvar attrValue = match[6]\n\t\t\tif (attrValue) attrValue = attrValue.replace(/\\\\([\"'])/g, \"$1\").replace(/\\\\\\\\/g, \"\\\\\")\n\t\t\tif (match[4] === \"class\") classes.push(attrValue)\n\t\t\telse attrs[match[4]] = attrValue === \"\" ? attrValue : attrValue || true\n\t\t}\n\t}\n\tif (classes.length > 0) attrs.className = classes.join(\" \")\n\treturn selectorCache[selector] = {tag: tag, attrs: attrs}\n}\n\nfunction execSelector(state, vnode) {\n\tvar attrs = vnode.attrs\n\tvar children = Vnode.normalizeChildren(vnode.children)\n\tvar hasClass = hasOwn.call(attrs, \"class\")\n\tvar className = hasClass ? attrs.class : attrs.className\n\n\tvnode.tag = state.tag\n\tvnode.attrs = null\n\tvnode.children = undefined\n\n\tif (!isEmpty(state.attrs) && !isEmpty(attrs)) {\n\t\tvar newAttrs = {}\n\n\t\tfor (var key in attrs) {\n\t\t\tif (hasOwn.call(attrs, key)) newAttrs[key] = attrs[key]\n\t\t}\n\n\t\tattrs = newAttrs\n\t}\n\n\tfor (var key in state.attrs) {\n\t\tif (hasOwn.call(state.attrs, key) && key !== \"className\" && !hasOwn.call(attrs, key)){\n\t\t\tattrs[key] = state.attrs[key]\n\t\t}\n\t}\n\tif (className != null || state.attrs.className != null) attrs.className =\n\t\tclassName != null\n\t\t\t? state.attrs.className != null\n\t\t\t\t? String(state.attrs.className) + \" \" + String(className)\n\t\t\t\t: className\n\t\t\t: state.attrs.className != null\n\t\t\t\t? state.attrs.className\n\t\t\t\t: null\n\n\tif (hasClass) attrs.class = null\n\n\tfor (var key in attrs) {\n\t\tif (hasOwn.call(attrs, key) && key !== \"key\") {\n\t\t\tvnode.attrs = attrs\n\t\t\tbreak\n\t\t}\n\t}\n\n\tif (Array.isArray(children) && children.length === 1 && children[0] != null && children[0].tag === \"#\") {\n\t\tvnode.text = children[0].children\n\t} else {\n\t\tvnode.children = children\n\t}\n\n\treturn vnode\n}\n\nfunction hyperscript(selector) {\n\tif (selector == null || typeof selector !== \"string\" && typeof selector !== \"function\" && typeof selector.view !== \"function\") {\n\t\tthrow Error(\"The selector must be either a string or a component.\");\n\t}\n\n\tvar vnode = hyperscriptVnode.apply(1, arguments)\n\n\tif (typeof selector === \"string\") {\n\t\tvnode.children = Vnode.normalizeChildren(vnode.children)\n\t\tif (selector !== \"[\") return execSelector(selectorCache[selector] || compileSelector(selector), vnode)\n\t}\n\n\tvnode.tag = selector\n\treturn vnode\n}\n\nmodule.exports = hyperscript\n","\"use strict\"\n\nvar Vnode = require(\"../render/vnode\")\n\nmodule.exports = function(html) {\n\tif (html == null) html = \"\"\n\treturn Vnode(\"<\", undefined, undefined, html, undefined, undefined)\n}\n","\"use strict\"\n\nvar Vnode = require(\"../render/vnode\")\nvar hyperscriptVnode = require(\"./hyperscriptVnode\")\n\nmodule.exports = function() {\n\tvar vnode = hyperscriptVnode.apply(0, arguments)\n\n\tvnode.tag = \"[\"\n\tvnode.children = Vnode.normalizeChildren(vnode.children)\n\treturn vnode\n}\n","\"use strict\"\n\nvar hyperscript = require(\"./render/hyperscript\")\n\nhyperscript.trust = require(\"./render/trust\")\nhyperscript.fragment = require(\"./render/fragment\")\n\nmodule.exports = hyperscript\n","\"use strict\"\n/** @constructor */\nvar PromisePolyfill = function(executor) {\n\tif (!(this instanceof PromisePolyfill)) throw new Error(\"Promise must be called with `new`\")\n\tif (typeof executor !== \"function\") throw new TypeError(\"executor must be a function\")\n\n\tvar self = this, resolvers = [], rejectors = [], resolveCurrent = handler(resolvers, true), rejectCurrent = handler(rejectors, false)\n\tvar instance = self._instance = {resolvers: resolvers, rejectors: rejectors}\n\tvar callAsync = typeof setImmediate === \"function\" ? setImmediate : setTimeout\n\tfunction handler(list, shouldAbsorb) {\n\t\treturn function execute(value) {\n\t\t\tvar then\n\t\t\ttry {\n\t\t\t\tif (shouldAbsorb && value != null && (typeof value === \"object\" || typeof value === \"function\") && typeof (then = value.then) === \"function\") {\n\t\t\t\t\tif (value === self) throw new TypeError(\"Promise can't be resolved w/ itself\")\n\t\t\t\t\texecuteOnce(then.bind(value))\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcallAsync(function() {\n\t\t\t\t\t\tif (!shouldAbsorb && list.length === 0) console.error(\"Possible unhandled promise rejection:\", value)\n\t\t\t\t\t\tfor (var i = 0; i < list.length; i++) list[i](value)\n\t\t\t\t\t\tresolvers.length = 0, rejectors.length = 0\n\t\t\t\t\t\tinstance.state = shouldAbsorb\n\t\t\t\t\t\tinstance.retry = function() {execute(value)}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\trejectCurrent(e)\n\t\t\t}\n\t\t}\n\t}\n\tfunction executeOnce(then) {\n\t\tvar runs = 0\n\t\tfunction run(fn) {\n\t\t\treturn function(value) {\n\t\t\t\tif (runs++ > 0) return\n\t\t\t\tfn(value)\n\t\t\t}\n\t\t}\n\t\tvar onerror = run(rejectCurrent)\n\t\ttry {then(run(resolveCurrent), onerror)} catch (e) {onerror(e)}\n\t}\n\n\texecuteOnce(executor)\n}\nPromisePolyfill.prototype.then = function(onFulfilled, onRejection) {\n\tvar self = this, instance = self._instance\n\tfunction handle(callback, list, next, state) {\n\t\tlist.push(function(value) {\n\t\t\tif (typeof callback !== \"function\") next(value)\n\t\t\telse try {resolveNext(callback(value))} catch (e) {if (rejectNext) rejectNext(e)}\n\t\t})\n\t\tif (typeof instance.retry === \"function\" && state === instance.state) instance.retry()\n\t}\n\tvar resolveNext, rejectNext\n\tvar promise = new PromisePolyfill(function(resolve, reject) {resolveNext = resolve, rejectNext = reject})\n\thandle(onFulfilled, instance.resolvers, resolveNext, true), handle(onRejection, instance.rejectors, rejectNext, false)\n\treturn promise\n}\nPromisePolyfill.prototype.catch = function(onRejection) {\n\treturn this.then(null, onRejection)\n}\nPromisePolyfill.prototype.finally = function(callback) {\n\treturn this.then(\n\t\tfunction(value) {\n\t\t\treturn PromisePolyfill.resolve(callback()).then(function() {\n\t\t\t\treturn value\n\t\t\t})\n\t\t},\n\t\tfunction(reason) {\n\t\t\treturn PromisePolyfill.resolve(callback()).then(function() {\n\t\t\t\treturn PromisePolyfill.reject(reason);\n\t\t\t})\n\t\t}\n\t)\n}\nPromisePolyfill.resolve = function(value) {\n\tif (value instanceof PromisePolyfill) return value\n\treturn new PromisePolyfill(function(resolve) {resolve(value)})\n}\nPromisePolyfill.reject = function(value) {\n\treturn new PromisePolyfill(function(resolve, reject) {reject(value)})\n}\nPromisePolyfill.all = function(list) {\n\treturn new PromisePolyfill(function(resolve, reject) {\n\t\tvar total = list.length, count = 0, values = []\n\t\tif (list.length === 0) resolve([])\n\t\telse for (var i = 0; i < list.length; i++) {\n\t\t\t(function(i) {\n\t\t\t\tfunction consume(value) {\n\t\t\t\t\tcount++\n\t\t\t\t\tvalues[i] = value\n\t\t\t\t\tif (count === total) resolve(values)\n\t\t\t\t}\n\t\t\t\tif (list[i] != null && (typeof list[i] === \"object\" || typeof list[i] === \"function\") && typeof list[i].then === \"function\") {\n\t\t\t\t\tlist[i].then(consume, reject)\n\t\t\t\t}\n\t\t\t\telse consume(list[i])\n\t\t\t})(i)\n\t\t}\n\t})\n}\nPromisePolyfill.race = function(list) {\n\treturn new PromisePolyfill(function(resolve, reject) {\n\t\tfor (var i = 0; i < list.length; i++) {\n\t\t\tlist[i].then(resolve, reject)\n\t\t}\n\t})\n}\n\nmodule.exports = PromisePolyfill\n","\"use strict\"\n\nvar PromisePolyfill = require(\"./polyfill\")\n\nif (typeof window !== \"undefined\") {\n\tif (typeof window.Promise === \"undefined\") {\n\t\twindow.Promise = PromisePolyfill\n\t} else if (!window.Promise.prototype.finally) {\n\t\twindow.Promise.prototype.finally = PromisePolyfill.prototype.finally\n\t}\n\tmodule.exports = window.Promise\n} else if (typeof global !== \"undefined\") {\n\tif (typeof global.Promise === \"undefined\") {\n\t\tglobal.Promise = PromisePolyfill\n\t} else if (!global.Promise.prototype.finally) {\n\t\tglobal.Promise.prototype.finally = PromisePolyfill.prototype.finally\n\t}\n\tmodule.exports = global.Promise\n} else {\n\tmodule.exports = PromisePolyfill\n}\n","\"use strict\"\n\nvar Vnode = require(\"../render/vnode\")\n\nmodule.exports = function($window) {\n\tvar $doc = $window && $window.document\n\tvar currentRedraw\n\n\tvar nameSpace = {\n\t\tsvg: \"http://www.w3.org/2000/svg\",\n\t\tmath: \"http://www.w3.org/1998/Math/MathML\"\n\t}\n\n\tfunction getNameSpace(vnode) {\n\t\treturn vnode.attrs && vnode.attrs.xmlns || nameSpace[vnode.tag]\n\t}\n\n\t//sanity check to discourage people from doing `vnode.state = ...`\n\tfunction checkState(vnode, original) {\n\t\tif (vnode.state !== original) throw new Error(\"`vnode.state` must not be modified\")\n\t}\n\n\t//Note: the hook is passed as the `this` argument to allow proxying the\n\t//arguments without requiring a full array allocation to do so. It also\n\t//takes advantage of the fact the current `vnode` is the first argument in\n\t//all lifecycle methods.\n\tfunction callHook(vnode) {\n\t\tvar original = vnode.state\n\t\ttry {\n\t\t\treturn this.apply(original, arguments)\n\t\t} finally {\n\t\t\tcheckState(vnode, original)\n\t\t}\n\t}\n\n\t// IE11 (at least) throws an UnspecifiedError when accessing document.activeElement when\n\t// inside an iframe. Catch and swallow this error, and heavy-handidly return null.\n\tfunction activeElement() {\n\t\ttry {\n\t\t\treturn $doc.activeElement\n\t\t} catch (e) {\n\t\t\treturn null\n\t\t}\n\t}\n\t//create\n\tfunction createNodes(parent, vnodes, start, end, hooks, nextSibling, ns) {\n\t\tfor (var i = start; i < end; i++) {\n\t\t\tvar vnode = vnodes[i]\n\t\t\tif (vnode != null) {\n\t\t\t\tcreateNode(parent, vnode, hooks, ns, nextSibling)\n\t\t\t}\n\t\t}\n\t}\n\tfunction createNode(parent, vnode, hooks, ns, nextSibling) {\n\t\tvar tag = vnode.tag\n\t\tif (typeof tag === \"string\") {\n\t\t\tvnode.state = {}\n\t\t\tif (vnode.attrs != null) initLifecycle(vnode.attrs, vnode, hooks)\n\t\t\tswitch (tag) {\n\t\t\t\tcase \"#\": createText(parent, vnode, nextSibling); break\n\t\t\t\tcase \"<\": createHTML(parent, vnode, ns, nextSibling); break\n\t\t\t\tcase \"[\": createFragment(parent, vnode, hooks, ns, nextSibling); break\n\t\t\t\tdefault: createElement(parent, vnode, hooks, ns, nextSibling)\n\t\t\t}\n\t\t}\n\t\telse createComponent(parent, vnode, hooks, ns, nextSibling)\n\t}\n\tfunction createText(parent, vnode, nextSibling) {\n\t\tvnode.dom = $doc.createTextNode(vnode.children)\n\t\tinsertNode(parent, vnode.dom, nextSibling)\n\t}\n\tvar possibleParents = {caption: \"table\", thead: \"table\", tbody: \"table\", tfoot: \"table\", tr: \"tbody\", th: \"tr\", td: \"tr\", colgroup: \"table\", col: \"colgroup\"}\n\tfunction createHTML(parent, vnode, ns, nextSibling) {\n\t\tvar match = vnode.children.match(/^\\s*?<(\\w+)/im) || []\n\t\t// not using the proper parent makes the child element(s) vanish.\n\t\t//     var div = document.createElement(\"div\")\n\t\t//     div.innerHTML = \"<td>i</td><td>j</td>\"\n\t\t//     console.log(div.innerHTML)\n\t\t// --> \"ij\", no <td> in sight.\n\t\tvar temp = $doc.createElement(possibleParents[match[1]] || \"div\")\n\t\tif (ns === \"http://www.w3.org/2000/svg\") {\n\t\t\ttemp.innerHTML = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\">\" + vnode.children + \"</svg>\"\n\t\t\ttemp = temp.firstChild\n\t\t} else {\n\t\t\ttemp.innerHTML = vnode.children\n\t\t}\n\t\tvnode.dom = temp.firstChild\n\t\tvnode.domSize = temp.childNodes.length\n\t\t// Capture nodes to remove, so we don't confuse them.\n\t\tvnode.instance = []\n\t\tvar fragment = $doc.createDocumentFragment()\n\t\tvar child\n\t\twhile (child = temp.firstChild) {\n\t\t\tvnode.instance.push(child)\n\t\t\tfragment.appendChild(child)\n\t\t}\n\t\tinsertNode(parent, fragment, nextSibling)\n\t}\n\tfunction createFragment(parent, vnode, hooks, ns, nextSibling) {\n\t\tvar fragment = $doc.createDocumentFragment()\n\t\tif (vnode.children != null) {\n\t\t\tvar children = vnode.children\n\t\t\tcreateNodes(fragment, children, 0, children.length, hooks, null, ns)\n\t\t}\n\t\tvnode.dom = fragment.firstChild\n\t\tvnode.domSize = fragment.childNodes.length\n\t\tinsertNode(parent, fragment, nextSibling)\n\t}\n\tfunction createElement(parent, vnode, hooks, ns, nextSibling) {\n\t\tvar tag = vnode.tag\n\t\tvar attrs = vnode.attrs\n\t\tvar is = attrs && attrs.is\n\n\t\tns = getNameSpace(vnode) || ns\n\n\t\tvar element = ns ?\n\t\t\tis ? $doc.createElementNS(ns, tag, {is: is}) : $doc.createElementNS(ns, tag) :\n\t\t\tis ? $doc.createElement(tag, {is: is}) : $doc.createElement(tag)\n\t\tvnode.dom = element\n\n\t\tif (attrs != null) {\n\t\t\tsetAttrs(vnode, attrs, ns)\n\t\t}\n\n\t\tinsertNode(parent, element, nextSibling)\n\n\t\tif (!maybeSetContentEditable(vnode)) {\n\t\t\tif (vnode.text != null) {\n\t\t\t\tif (vnode.text !== \"\") element.textContent = vnode.text\n\t\t\t\telse vnode.children = [Vnode(\"#\", undefined, undefined, vnode.text, undefined, undefined)]\n\t\t\t}\n\t\t\tif (vnode.children != null) {\n\t\t\t\tvar children = vnode.children\n\t\t\t\tcreateNodes(element, children, 0, children.length, hooks, null, ns)\n\t\t\t\tif (vnode.tag === \"select\" && attrs != null) setLateSelectAttrs(vnode, attrs)\n\t\t\t}\n\t\t}\n\t}\n\tfunction initComponent(vnode, hooks) {\n\t\tvar sentinel\n\t\tif (typeof vnode.tag.view === \"function\") {\n\t\t\tvnode.state = Object.create(vnode.tag)\n\t\t\tsentinel = vnode.state.view\n\t\t\tif (sentinel.$$reentrantLock$$ != null) return\n\t\t\tsentinel.$$reentrantLock$$ = true\n\t\t} else {\n\t\t\tvnode.state = void 0\n\t\t\tsentinel = vnode.tag\n\t\t\tif (sentinel.$$reentrantLock$$ != null) return\n\t\t\tsentinel.$$reentrantLock$$ = true\n\t\t\tvnode.state = (vnode.tag.prototype != null && typeof vnode.tag.prototype.view === \"function\") ? new vnode.tag(vnode) : vnode.tag(vnode)\n\t\t}\n\t\tinitLifecycle(vnode.state, vnode, hooks)\n\t\tif (vnode.attrs != null) initLifecycle(vnode.attrs, vnode, hooks)\n\t\tvnode.instance = Vnode.normalize(callHook.call(vnode.state.view, vnode))\n\t\tif (vnode.instance === vnode) throw Error(\"A view cannot return the vnode it received as argument\")\n\t\tsentinel.$$reentrantLock$$ = null\n\t}\n\tfunction createComponent(parent, vnode, hooks, ns, nextSibling) {\n\t\tinitComponent(vnode, hooks)\n\t\tif (vnode.instance != null) {\n\t\t\tcreateNode(parent, vnode.instance, hooks, ns, nextSibling)\n\t\t\tvnode.dom = vnode.instance.dom\n\t\t\tvnode.domSize = vnode.dom != null ? vnode.instance.domSize : 0\n\t\t}\n\t\telse {\n\t\t\tvnode.domSize = 0\n\t\t}\n\t}\n\n\t//update\n\t/**\n\t * @param {Element|Fragment} parent - the parent element\n\t * @param {Vnode[] | null} old - the list of vnodes of the last `render()` call for\n\t *                               this part of the tree\n\t * @param {Vnode[] | null} vnodes - as above, but for the current `render()` call.\n\t * @param {Function[]} hooks - an accumulator of post-render hooks (oncreate/onupdate)\n\t * @param {Element | null} nextSibling - the next DOM node if we're dealing with a\n\t *                                       fragment that is not the last item in its\n\t *                                       parent\n\t * @param {'svg' | 'math' | String | null} ns) - the current XML namespace, if any\n\t * @returns void\n\t */\n\t// This function diffs and patches lists of vnodes, both keyed and unkeyed.\n\t//\n\t// We will:\n\t//\n\t// 1. describe its general structure\n\t// 2. focus on the diff algorithm optimizations\n\t// 3. discuss DOM node operations.\n\n\t// ## Overview:\n\t//\n\t// The updateNodes() function:\n\t// - deals with trivial cases\n\t// - determines whether the lists are keyed or unkeyed based on the first non-null node\n\t//   of each list.\n\t// - diffs them and patches the DOM if needed (that's the brunt of the code)\n\t// - manages the leftovers: after diffing, are there:\n\t//   - old nodes left to remove?\n\t// \t - new nodes to insert?\n\t// \t deal with them!\n\t//\n\t// The lists are only iterated over once, with an exception for the nodes in `old` that\n\t// are visited in the fourth part of the diff and in the `removeNodes` loop.\n\n\t// ## Diffing\n\t//\n\t// Reading https://github.com/localvoid/ivi/blob/ddc09d06abaef45248e6133f7040d00d3c6be853/packages/ivi/src/vdom/implementation.ts#L617-L837\n\t// may be good for context on longest increasing subsequence-based logic for moving nodes.\n\t//\n\t// In order to diff keyed lists, one has to\n\t//\n\t// 1) match nodes in both lists, per key, and update them accordingly\n\t// 2) create the nodes present in the new list, but absent in the old one\n\t// 3) remove the nodes present in the old list, but absent in the new one\n\t// 4) figure out what nodes in 1) to move in order to minimize the DOM operations.\n\t//\n\t// To achieve 1) one can create a dictionary of keys => index (for the old list), then iterate\n\t// over the new list and for each new vnode, find the corresponding vnode in the old list using\n\t// the map.\n\t// 2) is achieved in the same step: if a new node has no corresponding entry in the map, it is new\n\t// and must be created.\n\t// For the removals, we actually remove the nodes that have been updated from the old list.\n\t// The nodes that remain in that list after 1) and 2) have been performed can be safely removed.\n\t// The fourth step is a bit more complex and relies on the longest increasing subsequence (LIS)\n\t// algorithm.\n\t//\n\t// the longest increasing subsequence is the list of nodes that can remain in place. Imagine going\n\t// from `1,2,3,4,5` to `4,5,1,2,3` where the numbers are not necessarily the keys, but the indices\n\t// corresponding to the keyed nodes in the old list (keyed nodes `e,d,c,b,a` => `b,a,e,d,c` would\n\t//  match the above lists, for example).\n\t//\n\t// In there are two increasing subsequences: `4,5` and `1,2,3`, the latter being the longest. We\n\t// can update those nodes without moving them, and only call `insertNode` on `4` and `5`.\n\t//\n\t// @localvoid adapted the algo to also support node deletions and insertions (the `lis` is actually\n\t// the longest increasing subsequence *of old nodes still present in the new list*).\n\t//\n\t// It is a general algorithm that is fireproof in all circumstances, but it requires the allocation\n\t// and the construction of a `key => oldIndex` map, and three arrays (one with `newIndex => oldIndex`,\n\t// the `LIS` and a temporary one to create the LIS).\n\t//\n\t// So we cheat where we can: if the tails of the lists are identical, they are guaranteed to be part of\n\t// the LIS and can be updated without moving them.\n\t//\n\t// If two nodes are swapped, they are guaranteed not to be part of the LIS, and must be moved (with\n\t// the exception of the last node if the list is fully reversed).\n\t//\n\t// ## Finding the next sibling.\n\t//\n\t// `updateNode()` and `createNode()` expect a nextSibling parameter to perform DOM operations.\n\t// When the list is being traversed top-down, at any index, the DOM nodes up to the previous\n\t// vnode reflect the content of the new list, whereas the rest of the DOM nodes reflect the old\n\t// list. The next sibling must be looked for in the old list using `getNextSibling(... oldStart + 1 ...)`.\n\t//\n\t// In the other scenarios (swaps, upwards traversal, map-based diff),\n\t// the new vnodes list is traversed upwards. The DOM nodes at the bottom of the list reflect the\n\t// bottom part of the new vnodes list, and we can use the `v.dom`  value of the previous node\n\t// as the next sibling (cached in the `nextSibling` variable).\n\n\n\t// ## DOM node moves\n\t//\n\t// In most scenarios `updateNode()` and `createNode()` perform the DOM operations. However,\n\t// this is not the case if the node moved (second and fourth part of the diff algo). We move\n\t// the old DOM nodes before updateNode runs because it enables us to use the cached `nextSibling`\n\t// variable rather than fetching it using `getNextSibling()`.\n\t//\n\t// The fourth part of the diff currently inserts nodes unconditionally, leading to issues\n\t// like #1791 and #1999. We need to be smarter about those situations where adjascent old\n\t// nodes remain together in the new list in a way that isn't covered by parts one and\n\t// three of the diff algo.\n\n\tfunction updateNodes(parent, old, vnodes, hooks, nextSibling, ns) {\n\t\tif (old === vnodes || old == null && vnodes == null) return\n\t\telse if (old == null || old.length === 0) createNodes(parent, vnodes, 0, vnodes.length, hooks, nextSibling, ns)\n\t\telse if (vnodes == null || vnodes.length === 0) removeNodes(parent, old, 0, old.length)\n\t\telse {\n\t\t\tvar isOldKeyed = old[0] != null && old[0].key != null\n\t\t\tvar isKeyed = vnodes[0] != null && vnodes[0].key != null\n\t\t\tvar start = 0, oldStart = 0\n\t\t\tif (!isOldKeyed) while (oldStart < old.length && old[oldStart] == null) oldStart++\n\t\t\tif (!isKeyed) while (start < vnodes.length && vnodes[start] == null) start++\n\t\t\tif (isKeyed === null && isOldKeyed == null) return // both lists are full of nulls\n\t\t\tif (isOldKeyed !== isKeyed) {\n\t\t\t\tremoveNodes(parent, old, oldStart, old.length)\n\t\t\t\tcreateNodes(parent, vnodes, start, vnodes.length, hooks, nextSibling, ns)\n\t\t\t} else if (!isKeyed) {\n\t\t\t\t// Don't index past the end of either list (causes deopts).\n\t\t\t\tvar commonLength = old.length < vnodes.length ? old.length : vnodes.length\n\t\t\t\t// Rewind if necessary to the first non-null index on either side.\n\t\t\t\t// We could alternatively either explicitly create or remove nodes when `start !== oldStart`\n\t\t\t\t// but that would be optimizing for sparse lists which are more rare than dense ones.\n\t\t\t\tstart = start < oldStart ? start : oldStart\n\t\t\t\tfor (; start < commonLength; start++) {\n\t\t\t\t\to = old[start]\n\t\t\t\t\tv = vnodes[start]\n\t\t\t\t\tif (o === v || o == null && v == null) continue\n\t\t\t\t\telse if (o == null) createNode(parent, v, hooks, ns, getNextSibling(old, start + 1, nextSibling))\n\t\t\t\t\telse if (v == null) removeNode(parent, o)\n\t\t\t\t\telse updateNode(parent, o, v, hooks, getNextSibling(old, start + 1, nextSibling), ns)\n\t\t\t\t}\n\t\t\t\tif (old.length > commonLength) removeNodes(parent, old, start, old.length)\n\t\t\t\tif (vnodes.length > commonLength) createNodes(parent, vnodes, start, vnodes.length, hooks, nextSibling, ns)\n\t\t\t} else {\n\t\t\t\t// keyed diff\n\t\t\t\tvar oldEnd = old.length - 1, end = vnodes.length - 1, map, o, v, oe, ve, topSibling\n\n\t\t\t\t// bottom-up\n\t\t\t\twhile (oldEnd >= oldStart && end >= start) {\n\t\t\t\t\toe = old[oldEnd]\n\t\t\t\t\tve = vnodes[end]\n\t\t\t\t\tif (oe.key !== ve.key) break\n\t\t\t\t\tif (oe !== ve) updateNode(parent, oe, ve, hooks, nextSibling, ns)\n\t\t\t\t\tif (ve.dom != null) nextSibling = ve.dom\n\t\t\t\t\toldEnd--, end--\n\t\t\t\t}\n\t\t\t\t// top-down\n\t\t\t\twhile (oldEnd >= oldStart && end >= start) {\n\t\t\t\t\to = old[oldStart]\n\t\t\t\t\tv = vnodes[start]\n\t\t\t\t\tif (o.key !== v.key) break\n\t\t\t\t\toldStart++, start++\n\t\t\t\t\tif (o !== v) updateNode(parent, o, v, hooks, getNextSibling(old, oldStart, nextSibling), ns)\n\t\t\t\t}\n\t\t\t\t// swaps and list reversals\n\t\t\t\twhile (oldEnd >= oldStart && end >= start) {\n\t\t\t\t\tif (start === end) break\n\t\t\t\t\tif (o.key !== ve.key || oe.key !== v.key) break\n\t\t\t\t\ttopSibling = getNextSibling(old, oldStart, nextSibling)\n\t\t\t\t\tmoveNodes(parent, oe, topSibling)\n\t\t\t\t\tif (oe !== v) updateNode(parent, oe, v, hooks, topSibling, ns)\n\t\t\t\t\tif (++start <= --end) moveNodes(parent, o, nextSibling)\n\t\t\t\t\tif (o !== ve) updateNode(parent, o, ve, hooks, nextSibling, ns)\n\t\t\t\t\tif (ve.dom != null) nextSibling = ve.dom\n\t\t\t\t\toldStart++; oldEnd--\n\t\t\t\t\toe = old[oldEnd]\n\t\t\t\t\tve = vnodes[end]\n\t\t\t\t\to = old[oldStart]\n\t\t\t\t\tv = vnodes[start]\n\t\t\t\t}\n\t\t\t\t// bottom up once again\n\t\t\t\twhile (oldEnd >= oldStart && end >= start) {\n\t\t\t\t\tif (oe.key !== ve.key) break\n\t\t\t\t\tif (oe !== ve) updateNode(parent, oe, ve, hooks, nextSibling, ns)\n\t\t\t\t\tif (ve.dom != null) nextSibling = ve.dom\n\t\t\t\t\toldEnd--, end--\n\t\t\t\t\toe = old[oldEnd]\n\t\t\t\t\tve = vnodes[end]\n\t\t\t\t}\n\t\t\t\tif (start > end) removeNodes(parent, old, oldStart, oldEnd + 1)\n\t\t\t\telse if (oldStart > oldEnd) createNodes(parent, vnodes, start, end + 1, hooks, nextSibling, ns)\n\t\t\t\telse {\n\t\t\t\t\t// inspired by ivi https://github.com/ivijs/ivi/ by Boris Kaul\n\t\t\t\t\tvar originalNextSibling = nextSibling, vnodesLength = end - start + 1, oldIndices = new Array(vnodesLength), li=0, i=0, pos = 2147483647, matched = 0, map, lisIndices\n\t\t\t\t\tfor (i = 0; i < vnodesLength; i++) oldIndices[i] = -1\n\t\t\t\t\tfor (i = end; i >= start; i--) {\n\t\t\t\t\t\tif (map == null) map = getKeyMap(old, oldStart, oldEnd + 1)\n\t\t\t\t\t\tve = vnodes[i]\n\t\t\t\t\t\tvar oldIndex = map[ve.key]\n\t\t\t\t\t\tif (oldIndex != null) {\n\t\t\t\t\t\t\tpos = (oldIndex < pos) ? oldIndex : -1 // becomes -1 if nodes were re-ordered\n\t\t\t\t\t\t\toldIndices[i-start] = oldIndex\n\t\t\t\t\t\t\toe = old[oldIndex]\n\t\t\t\t\t\t\told[oldIndex] = null\n\t\t\t\t\t\t\tif (oe !== ve) updateNode(parent, oe, ve, hooks, nextSibling, ns)\n\t\t\t\t\t\t\tif (ve.dom != null) nextSibling = ve.dom\n\t\t\t\t\t\t\tmatched++\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tnextSibling = originalNextSibling\n\t\t\t\t\tif (matched !== oldEnd - oldStart + 1) removeNodes(parent, old, oldStart, oldEnd + 1)\n\t\t\t\t\tif (matched === 0) createNodes(parent, vnodes, start, end + 1, hooks, nextSibling, ns)\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (pos === -1) {\n\t\t\t\t\t\t\t// the indices of the indices of the items that are part of the\n\t\t\t\t\t\t\t// longest increasing subsequence in the oldIndices list\n\t\t\t\t\t\t\tlisIndices = makeLisIndices(oldIndices)\n\t\t\t\t\t\t\tli = lisIndices.length - 1\n\t\t\t\t\t\t\tfor (i = end; i >= start; i--) {\n\t\t\t\t\t\t\t\tv = vnodes[i]\n\t\t\t\t\t\t\t\tif (oldIndices[i-start] === -1) createNode(parent, v, hooks, ns, nextSibling)\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tif (lisIndices[li] === i - start) li--\n\t\t\t\t\t\t\t\t\telse moveNodes(parent, v, nextSibling)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (v.dom != null) nextSibling = vnodes[i].dom\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfor (i = end; i >= start; i--) {\n\t\t\t\t\t\t\t\tv = vnodes[i]\n\t\t\t\t\t\t\t\tif (oldIndices[i-start] === -1) createNode(parent, v, hooks, ns, nextSibling)\n\t\t\t\t\t\t\t\tif (v.dom != null) nextSibling = vnodes[i].dom\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfunction updateNode(parent, old, vnode, hooks, nextSibling, ns) {\n\t\tvar oldTag = old.tag, tag = vnode.tag\n\t\tif (oldTag === tag) {\n\t\t\tvnode.state = old.state\n\t\t\tvnode.events = old.events\n\t\t\tif (shouldNotUpdate(vnode, old)) return\n\t\t\tif (typeof oldTag === \"string\") {\n\t\t\t\tif (vnode.attrs != null) {\n\t\t\t\t\tupdateLifecycle(vnode.attrs, vnode, hooks)\n\t\t\t\t}\n\t\t\t\tswitch (oldTag) {\n\t\t\t\t\tcase \"#\": updateText(old, vnode); break\n\t\t\t\t\tcase \"<\": updateHTML(parent, old, vnode, ns, nextSibling); break\n\t\t\t\t\tcase \"[\": updateFragment(parent, old, vnode, hooks, nextSibling, ns); break\n\t\t\t\t\tdefault: updateElement(old, vnode, hooks, ns)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse updateComponent(parent, old, vnode, hooks, nextSibling, ns)\n\t\t}\n\t\telse {\n\t\t\tremoveNode(parent, old)\n\t\t\tcreateNode(parent, vnode, hooks, ns, nextSibling)\n\t\t}\n\t}\n\tfunction updateText(old, vnode) {\n\t\tif (old.children.toString() !== vnode.children.toString()) {\n\t\t\told.dom.nodeValue = vnode.children\n\t\t}\n\t\tvnode.dom = old.dom\n\t}\n\tfunction updateHTML(parent, old, vnode, ns, nextSibling) {\n\t\tif (old.children !== vnode.children) {\n\t\t\tremoveHTML(parent, old)\n\t\t\tcreateHTML(parent, vnode, ns, nextSibling)\n\t\t}\n\t\telse {\n\t\t\tvnode.dom = old.dom\n\t\t\tvnode.domSize = old.domSize\n\t\t\tvnode.instance = old.instance\n\t\t}\n\t}\n\tfunction updateFragment(parent, old, vnode, hooks, nextSibling, ns) {\n\t\tupdateNodes(parent, old.children, vnode.children, hooks, nextSibling, ns)\n\t\tvar domSize = 0, children = vnode.children\n\t\tvnode.dom = null\n\t\tif (children != null) {\n\t\t\tfor (var i = 0; i < children.length; i++) {\n\t\t\t\tvar child = children[i]\n\t\t\t\tif (child != null && child.dom != null) {\n\t\t\t\t\tif (vnode.dom == null) vnode.dom = child.dom\n\t\t\t\t\tdomSize += child.domSize || 1\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (domSize !== 1) vnode.domSize = domSize\n\t\t}\n\t}\n\tfunction updateElement(old, vnode, hooks, ns) {\n\t\tvar element = vnode.dom = old.dom\n\t\tns = getNameSpace(vnode) || ns\n\n\t\tif (vnode.tag === \"textarea\") {\n\t\t\tif (vnode.attrs == null) vnode.attrs = {}\n\t\t\tif (vnode.text != null) {\n\t\t\t\tvnode.attrs.value = vnode.text //FIXME handle multiple children\n\t\t\t\tvnode.text = undefined\n\t\t\t}\n\t\t}\n\t\tupdateAttrs(vnode, old.attrs, vnode.attrs, ns)\n\t\tif (!maybeSetContentEditable(vnode)) {\n\t\t\tif (old.text != null && vnode.text != null && vnode.text !== \"\") {\n\t\t\t\tif (old.text.toString() !== vnode.text.toString()) old.dom.firstChild.nodeValue = vnode.text\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (old.text != null) old.children = [Vnode(\"#\", undefined, undefined, old.text, undefined, old.dom.firstChild)]\n\t\t\t\tif (vnode.text != null) vnode.children = [Vnode(\"#\", undefined, undefined, vnode.text, undefined, undefined)]\n\t\t\t\tupdateNodes(element, old.children, vnode.children, hooks, null, ns)\n\t\t\t}\n\t\t}\n\t}\n\tfunction updateComponent(parent, old, vnode, hooks, nextSibling, ns) {\n\t\tvnode.instance = Vnode.normalize(callHook.call(vnode.state.view, vnode))\n\t\tif (vnode.instance === vnode) throw Error(\"A view cannot return the vnode it received as argument\")\n\t\tupdateLifecycle(vnode.state, vnode, hooks)\n\t\tif (vnode.attrs != null) updateLifecycle(vnode.attrs, vnode, hooks)\n\t\tif (vnode.instance != null) {\n\t\t\tif (old.instance == null) createNode(parent, vnode.instance, hooks, ns, nextSibling)\n\t\t\telse updateNode(parent, old.instance, vnode.instance, hooks, nextSibling, ns)\n\t\t\tvnode.dom = vnode.instance.dom\n\t\t\tvnode.domSize = vnode.instance.domSize\n\t\t}\n\t\telse if (old.instance != null) {\n\t\t\tremoveNode(parent, old.instance)\n\t\t\tvnode.dom = undefined\n\t\t\tvnode.domSize = 0\n\t\t}\n\t\telse {\n\t\t\tvnode.dom = old.dom\n\t\t\tvnode.domSize = old.domSize\n\t\t}\n\t}\n\tfunction getKeyMap(vnodes, start, end) {\n\t\tvar map = Object.create(null)\n\t\tfor (; start < end; start++) {\n\t\t\tvar vnode = vnodes[start]\n\t\t\tif (vnode != null) {\n\t\t\t\tvar key = vnode.key\n\t\t\t\tif (key != null) map[key] = start\n\t\t\t}\n\t\t}\n\t\treturn map\n\t}\n\t// Lifted from ivi https://github.com/ivijs/ivi/\n\t// takes a list of unique numbers (-1 is special and can\n\t// occur multiple times) and returns an array with the indices\n\t// of the items that are part of the longest increasing\n\t// subsequece\n\tvar lisTemp = []\n\tfunction makeLisIndices(a) {\n\t\tvar result = [0]\n\t\tvar u = 0, v = 0, i = 0\n\t\tvar il = lisTemp.length = a.length\n\t\tfor (var i = 0; i < il; i++) lisTemp[i] = a[i]\n\t\tfor (var i = 0; i < il; ++i) {\n\t\t\tif (a[i] === -1) continue\n\t\t\tvar j = result[result.length - 1]\n\t\t\tif (a[j] < a[i]) {\n\t\t\t\tlisTemp[i] = j\n\t\t\t\tresult.push(i)\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tu = 0\n\t\t\tv = result.length - 1\n\t\t\twhile (u < v) {\n\t\t\t\t// Fast integer average without overflow.\n\t\t\t\t// eslint-disable-next-line no-bitwise\n\t\t\t\tvar c = (u >>> 1) + (v >>> 1) + (u & v & 1)\n\t\t\t\tif (a[result[c]] < a[i]) {\n\t\t\t\t\tu = c + 1\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tv = c\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (a[i] < a[result[u]]) {\n\t\t\t\tif (u > 0) lisTemp[i] = result[u - 1]\n\t\t\t\tresult[u] = i\n\t\t\t}\n\t\t}\n\t\tu = result.length\n\t\tv = result[u - 1]\n\t\twhile (u-- > 0) {\n\t\t\tresult[u] = v\n\t\t\tv = lisTemp[v]\n\t\t}\n\t\tlisTemp.length = 0\n\t\treturn result\n\t}\n\n\tfunction getNextSibling(vnodes, i, nextSibling) {\n\t\tfor (; i < vnodes.length; i++) {\n\t\t\tif (vnodes[i] != null && vnodes[i].dom != null) return vnodes[i].dom\n\t\t}\n\t\treturn nextSibling\n\t}\n\n\t// This covers a really specific edge case:\n\t// - Parent node is keyed and contains child\n\t// - Child is removed, returns unresolved promise in `onbeforeremove`\n\t// - Parent node is moved in keyed diff\n\t// - Remaining children still need moved appropriately\n\t//\n\t// Ideally, I'd track removed nodes as well, but that introduces a lot more\n\t// complexity and I'm not exactly interested in doing that.\n\tfunction moveNodes(parent, vnode, nextSibling) {\n\t\tvar frag = $doc.createDocumentFragment()\n\t\tmoveChildToFrag(parent, frag, vnode)\n\t\tinsertNode(parent, frag, nextSibling)\n\t}\n\tfunction moveChildToFrag(parent, frag, vnode) {\n\t\t// Dodge the recursion overhead in a few of the most common cases.\n\t\twhile (vnode.dom != null && vnode.dom.parentNode === parent) {\n\t\t\tif (typeof vnode.tag !== \"string\") {\n\t\t\t\tvnode = vnode.instance\n\t\t\t\tif (vnode != null) continue\n\t\t\t} else if (vnode.tag === \"<\") {\n\t\t\t\tfor (var i = 0; i < vnode.instance.length; i++) {\n\t\t\t\t\tfrag.appendChild(vnode.instance[i])\n\t\t\t\t}\n\t\t\t} else if (vnode.tag !== \"[\") {\n\t\t\t\t// Don't recurse for text nodes *or* elements, just fragments\n\t\t\t\tfrag.appendChild(vnode.dom)\n\t\t\t} else if (vnode.children.length === 1) {\n\t\t\t\tvnode = vnode.children[0]\n\t\t\t\tif (vnode != null) continue\n\t\t\t} else {\n\t\t\t\tfor (var i = 0; i < vnode.children.length; i++) {\n\t\t\t\t\tvar child = vnode.children[i]\n\t\t\t\t\tif (child != null) moveChildToFrag(parent, frag, child)\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak\n\t\t}\n\t}\n\n\tfunction insertNode(parent, dom, nextSibling) {\n\t\tif (nextSibling != null) parent.insertBefore(dom, nextSibling)\n\t\telse parent.appendChild(dom)\n\t}\n\n\tfunction maybeSetContentEditable(vnode) {\n\t\tif (vnode.attrs == null || (\n\t\t\tvnode.attrs.contenteditable == null && // attribute\n\t\t\tvnode.attrs.contentEditable == null // property\n\t\t)) return false\n\t\tvar children = vnode.children\n\t\tif (children != null && children.length === 1 && children[0].tag === \"<\") {\n\t\t\tvar content = children[0].children\n\t\t\tif (vnode.dom.innerHTML !== content) vnode.dom.innerHTML = content\n\t\t}\n\t\telse if (vnode.text != null || children != null && children.length !== 0) throw new Error(\"Child node of a contenteditable must be trusted\")\n\t\treturn true\n\t}\n\n\t//remove\n\tfunction removeNodes(parent, vnodes, start, end) {\n\t\tfor (var i = start; i < end; i++) {\n\t\t\tvar vnode = vnodes[i]\n\t\t\tif (vnode != null) removeNode(parent, vnode)\n\t\t}\n\t}\n\tfunction removeNode(parent, vnode) {\n\t\tvar mask = 0\n\t\tvar original = vnode.state\n\t\tvar stateResult, attrsResult\n\t\tif (typeof vnode.tag !== \"string\" && typeof vnode.state.onbeforeremove === \"function\") {\n\t\t\tvar result = callHook.call(vnode.state.onbeforeremove, vnode)\n\t\t\tif (result != null && typeof result.then === \"function\") {\n\t\t\t\tmask = 1\n\t\t\t\tstateResult = result\n\t\t\t}\n\t\t}\n\t\tif (vnode.attrs && typeof vnode.attrs.onbeforeremove === \"function\") {\n\t\t\tvar result = callHook.call(vnode.attrs.onbeforeremove, vnode)\n\t\t\tif (result != null && typeof result.then === \"function\") {\n\t\t\t\t// eslint-disable-next-line no-bitwise\n\t\t\t\tmask |= 2\n\t\t\t\tattrsResult = result\n\t\t\t}\n\t\t}\n\t\tcheckState(vnode, original)\n\n\t\t// If we can, try to fast-path it and avoid all the overhead of awaiting\n\t\tif (!mask) {\n\t\t\tonremove(vnode)\n\t\t\tremoveChild(parent, vnode)\n\t\t} else {\n\t\t\tif (stateResult != null) {\n\t\t\t\tvar next = function () {\n\t\t\t\t\t// eslint-disable-next-line no-bitwise\n\t\t\t\t\tif (mask & 1) { mask &= 2; if (!mask) reallyRemove() }\n\t\t\t\t}\n\t\t\t\tstateResult.then(next, next)\n\t\t\t}\n\t\t\tif (attrsResult != null) {\n\t\t\t\tvar next = function () {\n\t\t\t\t\t// eslint-disable-next-line no-bitwise\n\t\t\t\t\tif (mask & 2) { mask &= 1; if (!mask) reallyRemove() }\n\t\t\t\t}\n\t\t\t\tattrsResult.then(next, next)\n\t\t\t}\n\t\t}\n\n\t\tfunction reallyRemove() {\n\t\t\tcheckState(vnode, original)\n\t\t\tonremove(vnode)\n\t\t\tremoveChild(parent, vnode)\n\t\t}\n\t}\n\tfunction removeHTML(parent, vnode) {\n\t\tfor (var i = 0; i < vnode.instance.length; i++) {\n\t\t\tparent.removeChild(vnode.instance[i])\n\t\t}\n\t}\n\tfunction removeChild(parent, vnode) {\n\t\t// Dodge the recursion overhead in a few of the most common cases.\n\t\twhile (vnode.dom != null && vnode.dom.parentNode === parent) {\n\t\t\tif (typeof vnode.tag !== \"string\") {\n\t\t\t\tvnode = vnode.instance\n\t\t\t\tif (vnode != null) continue\n\t\t\t} else if (vnode.tag === \"<\") {\n\t\t\t\tremoveHTML(parent, vnode)\n\t\t\t} else {\n\t\t\t\tif (vnode.tag !== \"[\") {\n\t\t\t\t\tparent.removeChild(vnode.dom)\n\t\t\t\t\tif (!Array.isArray(vnode.children)) break\n\t\t\t\t}\n\t\t\t\tif (vnode.children.length === 1) {\n\t\t\t\t\tvnode = vnode.children[0]\n\t\t\t\t\tif (vnode != null) continue\n\t\t\t\t} else {\n\t\t\t\t\tfor (var i = 0; i < vnode.children.length; i++) {\n\t\t\t\t\t\tvar child = vnode.children[i]\n\t\t\t\t\t\tif (child != null) removeChild(parent, child)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak\n\t\t}\n\t}\n\tfunction onremove(vnode) {\n\t\tif (typeof vnode.tag !== \"string\" && typeof vnode.state.onremove === \"function\") callHook.call(vnode.state.onremove, vnode)\n\t\tif (vnode.attrs && typeof vnode.attrs.onremove === \"function\") callHook.call(vnode.attrs.onremove, vnode)\n\t\tif (typeof vnode.tag !== \"string\") {\n\t\t\tif (vnode.instance != null) onremove(vnode.instance)\n\t\t} else {\n\t\t\tvar children = vnode.children\n\t\t\tif (Array.isArray(children)) {\n\t\t\t\tfor (var i = 0; i < children.length; i++) {\n\t\t\t\t\tvar child = children[i]\n\t\t\t\t\tif (child != null) onremove(child)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t//attrs\n\tfunction setAttrs(vnode, attrs, ns) {\n\t\tfor (var key in attrs) {\n\t\t\tsetAttr(vnode, key, null, attrs[key], ns)\n\t\t}\n\t}\n\tfunction setAttr(vnode, key, old, value, ns) {\n\t\tif (key === \"key\" || key === \"is\" || value == null || isLifecycleMethod(key) || (old === value && !isFormAttribute(vnode, key)) && typeof value !== \"object\") return\n\t\tif (key[0] === \"o\" && key[1] === \"n\") return updateEvent(vnode, key, value)\n\t\tif (key.slice(0, 6) === \"xlink:\") vnode.dom.setAttributeNS(\"http://www.w3.org/1999/xlink\", key.slice(6), value)\n\t\telse if (key === \"style\") updateStyle(vnode.dom, old, value)\n\t\telse if (hasPropertyKey(vnode, key, ns)) {\n\t\t\tif (key === \"value\") {\n\t\t\t\t// Only do the coercion if we're actually going to check the value.\n\t\t\t\t/* eslint-disable no-implicit-coercion */\n\t\t\t\t//setting input[value] to same value by typing on focused element moves cursor to end in Chrome\n\t\t\t\tif ((vnode.tag === \"input\" || vnode.tag === \"textarea\") && vnode.dom.value === \"\" + value && vnode.dom === activeElement()) return\n\t\t\t\t//setting select[value] to same value while having select open blinks select dropdown in Chrome\n\t\t\t\tif (vnode.tag === \"select\" && old !== null && vnode.dom.value === \"\" + value) return\n\t\t\t\t//setting option[value] to same value while having select open blinks select dropdown in Chrome\n\t\t\t\tif (vnode.tag === \"option\" && old !== null && vnode.dom.value === \"\" + value) return\n\t\t\t\t/* eslint-enable no-implicit-coercion */\n\t\t\t}\n\t\t\t// If you assign an input type that is not supported by IE 11 with an assignment expression, an error will occur.\n\t\t\tif (vnode.tag === \"input\" && key === \"type\") vnode.dom.setAttribute(key, value)\n\t\t\telse vnode.dom[key] = value\n\t\t} else {\n\t\t\tif (typeof value === \"boolean\") {\n\t\t\t\tif (value) vnode.dom.setAttribute(key, \"\")\n\t\t\t\telse vnode.dom.removeAttribute(key)\n\t\t\t}\n\t\t\telse vnode.dom.setAttribute(key === \"className\" ? \"class\" : key, value)\n\t\t}\n\t}\n\tfunction removeAttr(vnode, key, old, ns) {\n\t\tif (key === \"key\" || key === \"is\" || old == null || isLifecycleMethod(key)) return\n\t\tif (key[0] === \"o\" && key[1] === \"n\" && !isLifecycleMethod(key)) updateEvent(vnode, key, undefined)\n\t\telse if (key === \"style\") updateStyle(vnode.dom, old, null)\n\t\telse if (\n\t\t\thasPropertyKey(vnode, key, ns)\n\t\t\t&& key !== \"className\"\n\t\t\t&& !(key === \"value\" && (\n\t\t\t\tvnode.tag === \"option\"\n\t\t\t\t|| vnode.tag === \"select\" && vnode.dom.selectedIndex === -1 && vnode.dom === activeElement()\n\t\t\t))\n\t\t\t&& !(vnode.tag === \"input\" && key === \"type\")\n\t\t) {\n\t\t\tvnode.dom[key] = null\n\t\t} else {\n\t\t\tvar nsLastIndex = key.indexOf(\":\")\n\t\t\tif (nsLastIndex !== -1) key = key.slice(nsLastIndex + 1)\n\t\t\tif (old !== false) vnode.dom.removeAttribute(key === \"className\" ? \"class\" : key)\n\t\t}\n\t}\n\tfunction setLateSelectAttrs(vnode, attrs) {\n\t\tif (\"value\" in attrs) {\n\t\t\tif(attrs.value === null) {\n\t\t\t\tif (vnode.dom.selectedIndex !== -1) vnode.dom.value = null\n\t\t\t} else {\n\t\t\t\tvar normalized = \"\" + attrs.value // eslint-disable-line no-implicit-coercion\n\t\t\t\tif (vnode.dom.value !== normalized || vnode.dom.selectedIndex === -1) {\n\t\t\t\t\tvnode.dom.value = normalized\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (\"selectedIndex\" in attrs) setAttr(vnode, \"selectedIndex\", null, attrs.selectedIndex, undefined)\n\t}\n\tfunction updateAttrs(vnode, old, attrs, ns) {\n\t\tif (attrs != null) {\n\t\t\tfor (var key in attrs) {\n\t\t\t\tsetAttr(vnode, key, old && old[key], attrs[key], ns)\n\t\t\t}\n\t\t}\n\t\tvar val\n\t\tif (old != null) {\n\t\t\tfor (var key in old) {\n\t\t\t\tif (((val = old[key]) != null) && (attrs == null || attrs[key] == null)) {\n\t\t\t\t\tremoveAttr(vnode, key, val, ns)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfunction isFormAttribute(vnode, attr) {\n\t\treturn attr === \"value\" || attr === \"checked\" || attr === \"selectedIndex\" || attr === \"selected\" && vnode.dom === activeElement() || vnode.tag === \"option\" && vnode.dom.parentNode === $doc.activeElement\n\t}\n\tfunction isLifecycleMethod(attr) {\n\t\treturn attr === \"oninit\" || attr === \"oncreate\" || attr === \"onupdate\" || attr === \"onremove\" || attr === \"onbeforeremove\" || attr === \"onbeforeupdate\"\n\t}\n\tfunction hasPropertyKey(vnode, key, ns) {\n\t\t// Filter out namespaced keys\n\t\treturn ns === undefined && (\n\t\t\t// If it's a custom element, just keep it.\n\t\t\tvnode.tag.indexOf(\"-\") > -1 || vnode.attrs != null && vnode.attrs.is ||\n\t\t\t// If it's a normal element, let's try to avoid a few browser bugs.\n\t\t\tkey !== \"href\" && key !== \"list\" && key !== \"form\" && key !== \"width\" && key !== \"height\"// && key !== \"type\"\n\t\t\t// Defer the property check until *after* we check everything.\n\t\t) && key in vnode.dom\n\t}\n\n\t//style\n\tvar uppercaseRegex = /[A-Z]/g\n\tfunction toLowerCase(capital) { return \"-\" + capital.toLowerCase() }\n\tfunction normalizeKey(key) {\n\t\treturn key[0] === \"-\" && key[1] === \"-\" ? key :\n\t\t\tkey === \"cssFloat\" ? \"float\" :\n\t\t\t\tkey.replace(uppercaseRegex, toLowerCase)\n\t}\n\tfunction updateStyle(element, old, style) {\n\t\tif (old === style) {\n\t\t\t// Styles are equivalent, do nothing.\n\t\t} else if (style == null) {\n\t\t\t// New style is missing, just clear it.\n\t\t\telement.style.cssText = \"\"\n\t\t} else if (typeof style !== \"object\") {\n\t\t\t// New style is a string, let engine deal with patching.\n\t\t\telement.style.cssText = style\n\t\t} else if (old == null || typeof old !== \"object\") {\n\t\t\t// `old` is missing or a string, `style` is an object.\n\t\t\telement.style.cssText = \"\"\n\t\t\t// Add new style properties\n\t\t\tfor (var key in style) {\n\t\t\t\tvar value = style[key]\n\t\t\t\tif (value != null) element.style.setProperty(normalizeKey(key), String(value))\n\t\t\t}\n\t\t} else {\n\t\t\t// Both old & new are (different) objects.\n\t\t\t// Update style properties that have changed\n\t\t\tfor (var key in style) {\n\t\t\t\tvar value = style[key]\n\t\t\t\tif (value != null && (value = String(value)) !== String(old[key])) {\n\t\t\t\t\telement.style.setProperty(normalizeKey(key), value)\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Remove style properties that no longer exist\n\t\t\tfor (var key in old) {\n\t\t\t\tif (old[key] != null && style[key] == null) {\n\t\t\t\t\telement.style.removeProperty(normalizeKey(key))\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Here's an explanation of how this works:\n\t// 1. The event names are always (by design) prefixed by `on`.\n\t// 2. The EventListener interface accepts either a function or an object\n\t//    with a `handleEvent` method.\n\t// 3. The object does not inherit from `Object.prototype`, to avoid\n\t//    any potential interference with that (e.g. setters).\n\t// 4. The event name is remapped to the handler before calling it.\n\t// 5. In function-based event handlers, `ev.target === this`. We replicate\n\t//    that below.\n\t// 6. In function-based event handlers, `return false` prevents the default\n\t//    action and stops event propagation. We replicate that below.\n\tfunction EventDict() {\n\t\t// Save this, so the current redraw is correctly tracked.\n\t\tthis._ = currentRedraw\n\t}\n\tEventDict.prototype = Object.create(null)\n\tEventDict.prototype.handleEvent = function (ev) {\n\t\tvar handler = this[\"on\" + ev.type]\n\t\tvar result\n\t\tif (typeof handler === \"function\") result = handler.call(ev.currentTarget, ev)\n\t\telse if (typeof handler.handleEvent === \"function\") handler.handleEvent(ev)\n\t\tif (this._ && ev.redraw !== false) (0, this._)()\n\t\tif (result === false) {\n\t\t\tev.preventDefault()\n\t\t\tev.stopPropagation()\n\t\t}\n\t}\n\n\t//event\n\tfunction updateEvent(vnode, key, value) {\n\t\tif (vnode.events != null) {\n\t\t\tif (vnode.events[key] === value) return\n\t\t\tif (value != null && (typeof value === \"function\" || typeof value === \"object\")) {\n\t\t\t\tif (vnode.events[key] == null) vnode.dom.addEventListener(key.slice(2), vnode.events, false)\n\t\t\t\tvnode.events[key] = value\n\t\t\t} else {\n\t\t\t\tif (vnode.events[key] != null) vnode.dom.removeEventListener(key.slice(2), vnode.events, false)\n\t\t\t\tvnode.events[key] = undefined\n\t\t\t}\n\t\t} else if (value != null && (typeof value === \"function\" || typeof value === \"object\")) {\n\t\t\tvnode.events = new EventDict()\n\t\t\tvnode.dom.addEventListener(key.slice(2), vnode.events, false)\n\t\t\tvnode.events[key] = value\n\t\t}\n\t}\n\n\t//lifecycle\n\tfunction initLifecycle(source, vnode, hooks) {\n\t\tif (typeof source.oninit === \"function\") callHook.call(source.oninit, vnode)\n\t\tif (typeof source.oncreate === \"function\") hooks.push(callHook.bind(source.oncreate, vnode))\n\t}\n\tfunction updateLifecycle(source, vnode, hooks) {\n\t\tif (typeof source.onupdate === \"function\") hooks.push(callHook.bind(source.onupdate, vnode))\n\t}\n\tfunction shouldNotUpdate(vnode, old) {\n\t\tdo {\n\t\t\tif (vnode.attrs != null && typeof vnode.attrs.onbeforeupdate === \"function\") {\n\t\t\t\tvar force = callHook.call(vnode.attrs.onbeforeupdate, vnode, old)\n\t\t\t\tif (force !== undefined && !force) break\n\t\t\t}\n\t\t\tif (typeof vnode.tag !== \"string\" && typeof vnode.state.onbeforeupdate === \"function\") {\n\t\t\t\tvar force = callHook.call(vnode.state.onbeforeupdate, vnode, old)\n\t\t\t\tif (force !== undefined && !force) break\n\t\t\t}\n\t\t\treturn false\n\t\t} while (false); // eslint-disable-line no-constant-condition\n\t\tvnode.dom = old.dom\n\t\tvnode.domSize = old.domSize\n\t\tvnode.instance = old.instance\n\t\t// One would think having the actual latest attributes would be ideal,\n\t\t// but it doesn't let us properly diff based on our current internal\n\t\t// representation. We have to save not only the old DOM info, but also\n\t\t// the attributes used to create it, as we diff *that*, not against the\n\t\t// DOM directly (with a few exceptions in `setAttr`). And, of course, we\n\t\t// need to save the children and text as they are conceptually not\n\t\t// unlike special \"attributes\" internally.\n\t\tvnode.attrs = old.attrs\n\t\tvnode.children = old.children\n\t\tvnode.text = old.text\n\t\treturn true\n\t}\n\n\treturn function(dom, vnodes, redraw) {\n\t\tif (!dom) throw new TypeError(\"Ensure the DOM element being passed to m.route/m.mount/m.render is not undefined.\")\n\t\tvar hooks = []\n\t\tvar active = activeElement()\n\t\tvar namespace = dom.namespaceURI\n\n\t\t// First time rendering into a node clears it out\n\t\tif (dom.vnodes == null) dom.textContent = \"\"\n\n\t\tvnodes = Vnode.normalizeChildren(Array.isArray(vnodes) ? vnodes : [vnodes])\n\t\tvar prevRedraw = currentRedraw\n\t\ttry {\n\t\t\tcurrentRedraw = typeof redraw === \"function\" ? redraw : undefined\n\t\t\tupdateNodes(dom, dom.vnodes, vnodes, hooks, null, namespace === \"http://www.w3.org/1999/xhtml\" ? undefined : namespace)\n\t\t} finally {\n\t\t\tcurrentRedraw = prevRedraw\n\t\t}\n\t\tdom.vnodes = vnodes\n\t\t// `document.activeElement` can return null: https://html.spec.whatwg.org/multipage/interaction.html#dom-document-activeelement\n\t\tif (active != null && activeElement() !== active && typeof active.focus === \"function\") active.focus()\n\t\tfor (var i = 0; i < hooks.length; i++) hooks[i]()\n\t}\n}\n","\"use strict\"\n\nmodule.exports = require(\"./render/render\")(window)\n","\"use strict\"\n\nvar Vnode = require(\"../render/vnode\")\n\nmodule.exports = function(render, schedule, console) {\n\tvar subscriptions = []\n\tvar rendering = false\n\tvar pending = false\n\n\tfunction sync() {\n\t\tif (rendering) throw new Error(\"Nested m.redraw.sync() call\")\n\t\trendering = true\n\t\tfor (var i = 0; i < subscriptions.length; i += 2) {\n\t\t\ttry { render(subscriptions[i], Vnode(subscriptions[i + 1]), redraw) }\n\t\t\tcatch (e) { console.error(e) }\n\t\t}\n\t\trendering = false\n\t}\n\n\tfunction redraw() {\n\t\tif (!pending) {\n\t\t\tpending = true\n\t\t\tschedule(function() {\n\t\t\t\tpending = false\n\t\t\t\tsync()\n\t\t\t})\n\t\t}\n\t}\n\n\tredraw.sync = sync\n\n\tfunction mount(root, component) {\n\t\tif (component != null && component.view == null && typeof component !== \"function\") {\n\t\t\tthrow new TypeError(\"m.mount(element, component) expects a component, not a vnode\")\n\t\t}\n\n\t\tvar index = subscriptions.indexOf(root)\n\t\tif (index >= 0) {\n\t\t\tsubscriptions.splice(index, 2)\n\t\t\trender(root, [], redraw)\n\t\t}\n\n\t\tif (component != null) {\n\t\t\tsubscriptions.push(root, component)\n\t\t\trender(root, Vnode(component), redraw)\n\t\t}\n\t}\n\n\treturn {mount: mount, redraw: redraw}\n}\n","\"use strict\"\n\nvar render = require(\"./render\")\n\nmodule.exports = require(\"./api/mount-redraw\")(render, requestAnimationFrame, console)\n","\"use strict\"\n\nmodule.exports = function(object) {\n\tif (Object.prototype.toString.call(object) !== \"[object Object]\") return \"\"\n\n\tvar args = []\n\tfor (var key in object) {\n\t\tdestructure(key, object[key])\n\t}\n\n\treturn args.join(\"&\")\n\n\tfunction destructure(key, value) {\n\t\tif (Array.isArray(value)) {\n\t\t\tfor (var i = 0; i < value.length; i++) {\n\t\t\t\tdestructure(key + \"[\" + i + \"]\", value[i])\n\t\t\t}\n\t\t}\n\t\telse if (Object.prototype.toString.call(value) === \"[object Object]\") {\n\t\t\tfor (var i in value) {\n\t\t\t\tdestructure(key + \"[\" + i + \"]\", value[i])\n\t\t\t}\n\t\t}\n\t\telse args.push(encodeURIComponent(key) + (value != null && value !== \"\" ? \"=\" + encodeURIComponent(value) : \"\"))\n\t}\n}\n","\"use strict\"\n\nmodule.exports = Object.assign || function(target, source) {\n\tif(source) Object.keys(source).forEach(function(key) { target[key] = source[key] })\n}\n","\"use strict\"\n\nvar buildQueryString = require(\"../querystring/build\")\nvar assign = require(\"./assign\")\n\n// Returns `path` from `template` + `params`\nmodule.exports = function(template, params) {\n\tif ((/:([^\\/\\.-]+)(\\.{3})?:/).test(template)) {\n\t\tthrow new SyntaxError(\"Template parameter names *must* be separated\")\n\t}\n\tif (params == null) return template\n\tvar queryIndex = template.indexOf(\"?\")\n\tvar hashIndex = template.indexOf(\"#\")\n\tvar queryEnd = hashIndex < 0 ? template.length : hashIndex\n\tvar pathEnd = queryIndex < 0 ? queryEnd : queryIndex\n\tvar path = template.slice(0, pathEnd)\n\tvar query = {}\n\n\tassign(query, params)\n\n\tvar resolved = path.replace(/:([^\\/\\.-]+)(\\.{3})?/g, function(m, key, variadic) {\n\t\tdelete query[key]\n\t\t// If no such parameter exists, don't interpolate it.\n\t\tif (params[key] == null) return m\n\t\t// Escape normal parameters, but not variadic ones.\n\t\treturn variadic ? params[key] : encodeURIComponent(String(params[key]))\n\t})\n\n\t// In case the template substitution adds new query/hash parameters.\n\tvar newQueryIndex = resolved.indexOf(\"?\")\n\tvar newHashIndex = resolved.indexOf(\"#\")\n\tvar newQueryEnd = newHashIndex < 0 ? resolved.length : newHashIndex\n\tvar newPathEnd = newQueryIndex < 0 ? newQueryEnd : newQueryIndex\n\tvar result = resolved.slice(0, newPathEnd)\n\n\tif (queryIndex >= 0) result += template.slice(queryIndex, queryEnd)\n\tif (newQueryIndex >= 0) result += (queryIndex < 0 ? \"?\" : \"&\") + resolved.slice(newQueryIndex, newQueryEnd)\n\tvar querystring = buildQueryString(query)\n\tif (querystring) result += (queryIndex < 0 && newQueryIndex < 0 ? \"?\" : \"&\") + querystring\n\tif (hashIndex >= 0) result += template.slice(hashIndex)\n\tif (newHashIndex >= 0) result += (hashIndex < 0 ? \"\" : \"&\") + resolved.slice(newHashIndex)\n\treturn result\n}\n","\"use strict\"\n\nvar buildPathname = require(\"../pathname/build\")\n\nmodule.exports = function($window, Promise, oncompletion) {\n\tvar callbackCount = 0\n\n\tfunction PromiseProxy(executor) {\n\t\treturn new Promise(executor)\n\t}\n\n\t// In case the global Promise is some userland library's where they rely on\n\t// `foo instanceof this.constructor`, `this.constructor.resolve(value)`, or\n\t// similar. Let's *not* break them.\n\tPromiseProxy.prototype = Promise.prototype\n\tPromiseProxy.__proto__ = Promise // eslint-disable-line no-proto\n\n\tfunction makeRequest(factory) {\n\t\treturn function(url, args) {\n\t\t\tif (typeof url !== \"string\") { args = url; url = url.url }\n\t\t\telse if (args == null) args = {}\n\t\t\tvar promise = new Promise(function(resolve, reject) {\n\t\t\t\tfactory(buildPathname(url, args.params), args, function (data) {\n\t\t\t\t\tif (typeof args.type === \"function\") {\n\t\t\t\t\t\tif (Array.isArray(data)) {\n\t\t\t\t\t\t\tfor (var i = 0; i < data.length; i++) {\n\t\t\t\t\t\t\t\tdata[i] = new args.type(data[i])\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse data = new args.type(data)\n\t\t\t\t\t}\n\t\t\t\t\tresolve(data)\n\t\t\t\t}, reject)\n\t\t\t})\n\t\t\tif (args.background === true) return promise\n\t\t\tvar count = 0\n\t\t\tfunction complete() {\n\t\t\t\tif (--count === 0 && typeof oncompletion === \"function\") oncompletion()\n\t\t\t}\n\n\t\t\treturn wrap(promise)\n\n\t\t\tfunction wrap(promise) {\n\t\t\t\tvar then = promise.then\n\t\t\t\t// Set the constructor, so engines know to not await or resolve\n\t\t\t\t// this as a native promise. At the time of writing, this is\n\t\t\t\t// only necessary for V8, but their behavior is the correct\n\t\t\t\t// behavior per spec. See this spec issue for more details:\n\t\t\t\t// https://github.com/tc39/ecma262/issues/1577. Also, see the\n\t\t\t\t// corresponding comment in `request/tests/test-request.js` for\n\t\t\t\t// a bit more background on the issue at hand.\n\t\t\t\tpromise.constructor = PromiseProxy\n\t\t\t\tpromise.then = function() {\n\t\t\t\t\tcount++\n\t\t\t\t\tvar next = then.apply(promise, arguments)\n\t\t\t\t\tnext.then(complete, function(e) {\n\t\t\t\t\t\tcomplete()\n\t\t\t\t\t\tif (count === 0) throw e\n\t\t\t\t\t})\n\t\t\t\t\treturn wrap(next)\n\t\t\t\t}\n\t\t\t\treturn promise\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction hasHeader(args, name) {\n\t\tfor (var key in args.headers) {\n\t\t\tif ({}.hasOwnProperty.call(args.headers, key) && name.test(key)) return true\n\t\t}\n\t\treturn false\n\t}\n\n\treturn {\n\t\trequest: makeRequest(function(url, args, resolve, reject) {\n\t\t\tvar method = args.method != null ? args.method.toUpperCase() : \"GET\"\n\t\t\tvar body = args.body\n\t\t\tvar assumeJSON = (args.serialize == null || args.serialize === JSON.serialize) && !(body instanceof $window.FormData)\n\t\t\tvar responseType = args.responseType || (typeof args.extract === \"function\" ? \"\" : \"json\")\n\n\t\t\tvar xhr = new $window.XMLHttpRequest(), aborted = false\n\t\t\tvar original = xhr, replacedAbort\n\t\t\tvar abort = xhr.abort\n\n\t\t\txhr.abort = function() {\n\t\t\t\taborted = true\n\t\t\t\tabort.call(this)\n\t\t\t}\n\n\t\t\txhr.open(method, url, args.async !== false, typeof args.user === \"string\" ? args.user : undefined, typeof args.password === \"string\" ? args.password : undefined)\n\n\t\t\tif (assumeJSON && body != null && !hasHeader(args, /^content-type$/i)) {\n\t\t\t\txhr.setRequestHeader(\"Content-Type\", \"application/json; charset=utf-8\")\n\t\t\t}\n\t\t\tif (typeof args.deserialize !== \"function\" && !hasHeader(args, /^accept$/i)) {\n\t\t\t\txhr.setRequestHeader(\"Accept\", \"application/json, text/*\")\n\t\t\t}\n\t\t\tif (args.withCredentials) xhr.withCredentials = args.withCredentials\n\t\t\tif (args.timeout) xhr.timeout = args.timeout\n\t\t\txhr.responseType = responseType\n\n\t\t\tfor (var key in args.headers) {\n\t\t\t\tif ({}.hasOwnProperty.call(args.headers, key)) {\n\t\t\t\t\txhr.setRequestHeader(key, args.headers[key])\n\t\t\t\t}\n\t\t\t}\n\n\t\t\txhr.onreadystatechange = function(ev) {\n\t\t\t\t// Don't throw errors on xhr.abort().\n\t\t\t\tif (aborted) return\n\n\t\t\t\tif (ev.target.readyState === 4) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvar success = (ev.target.status >= 200 && ev.target.status < 300) || ev.target.status === 304 || (/^file:\\/\\//i).test(url)\n\t\t\t\t\t\t// When the response type isn't \"\" or \"text\",\n\t\t\t\t\t\t// `xhr.responseText` is the wrong thing to use.\n\t\t\t\t\t\t// Browsers do the right thing and throw here, and we\n\t\t\t\t\t\t// should honor that and do the right thing by\n\t\t\t\t\t\t// preferring `xhr.response` where possible/practical.\n\t\t\t\t\t\tvar response = ev.target.response, message\n\n\t\t\t\t\t\tif (responseType === \"json\") {\n\t\t\t\t\t\t\t// For IE and Edge, which don't implement\n\t\t\t\t\t\t\t// `responseType: \"json\"`.\n\t\t\t\t\t\t\tif (!ev.target.responseType && typeof args.extract !== \"function\") response = JSON.parse(ev.target.responseText)\n\t\t\t\t\t\t} else if (!responseType || responseType === \"text\") {\n\t\t\t\t\t\t\t// Only use this default if it's text. If a parsed\n\t\t\t\t\t\t\t// document is needed on old IE and friends (all\n\t\t\t\t\t\t\t// unsupported), the user should use a custom\n\t\t\t\t\t\t\t// `config` instead. They're already using this at\n\t\t\t\t\t\t\t// their own risk.\n\t\t\t\t\t\t\tif (response == null) response = ev.target.responseText\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (typeof args.extract === \"function\") {\n\t\t\t\t\t\t\tresponse = args.extract(ev.target, args)\n\t\t\t\t\t\t\tsuccess = true\n\t\t\t\t\t\t} else if (typeof args.deserialize === \"function\") {\n\t\t\t\t\t\t\tresponse = args.deserialize(response)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (success) resolve(response)\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ttry { message = ev.target.responseText }\n\t\t\t\t\t\t\tcatch (e) { message = response }\n\t\t\t\t\t\t\tvar error = new Error(message)\n\t\t\t\t\t\t\terror.code = ev.target.status\n\t\t\t\t\t\t\terror.response = response\n\t\t\t\t\t\t\treject(error)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (e) {\n\t\t\t\t\t\treject(e)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (typeof args.config === \"function\") {\n\t\t\t\txhr = args.config(xhr, args, url) || xhr\n\n\t\t\t\t// Propagate the `abort` to any replacement XHR as well.\n\t\t\t\tif (xhr !== original) {\n\t\t\t\t\treplacedAbort = xhr.abort\n\t\t\t\t\txhr.abort = function() {\n\t\t\t\t\t\taborted = true\n\t\t\t\t\t\treplacedAbort.call(this)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (body == null) xhr.send()\n\t\t\telse if (typeof args.serialize === \"function\") xhr.send(args.serialize(body))\n\t\t\telse if (body instanceof $window.FormData) xhr.send(body)\n\t\t\telse xhr.send(JSON.stringify(body))\n\t\t}),\n\t\tjsonp: makeRequest(function(url, args, resolve, reject) {\n\t\t\tvar callbackName = args.callbackName || \"_mithril_\" + Math.round(Math.random() * 1e16) + \"_\" + callbackCount++\n\t\t\tvar script = $window.document.createElement(\"script\")\n\t\t\t$window[callbackName] = function(data) {\n\t\t\t\tdelete $window[callbackName]\n\t\t\t\tscript.parentNode.removeChild(script)\n\t\t\t\tresolve(data)\n\t\t\t}\n\t\t\tscript.onerror = function() {\n\t\t\t\tdelete $window[callbackName]\n\t\t\t\tscript.parentNode.removeChild(script)\n\t\t\t\treject(new Error(\"JSONP request failed\"))\n\t\t\t}\n\t\t\tscript.src = url + (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") +\n\t\t\t\tencodeURIComponent(args.callbackKey || \"callback\") + \"=\" +\n\t\t\t\tencodeURIComponent(callbackName)\n\t\t\t$window.document.documentElement.appendChild(script)\n\t\t}),\n\t}\n}\n","\"use strict\"\n\nvar PromisePolyfill = require(\"./promise/promise\")\nvar mountRedraw = require(\"./mount-redraw\")\n\nmodule.exports = require(\"./request/request\")(window, PromisePolyfill, mountRedraw.redraw)\n","\"use strict\"\n\nmodule.exports = function(string) {\n\tif (string === \"\" || string == null) return {}\n\tif (string.charAt(0) === \"?\") string = string.slice(1)\n\n\tvar entries = string.split(\"&\"), counters = {}, data = {}\n\tfor (var i = 0; i < entries.length; i++) {\n\t\tvar entry = entries[i].split(\"=\")\n\t\tvar key = decodeURIComponent(entry[0])\n\t\tvar value = entry.length === 2 ? decodeURIComponent(entry[1]) : \"\"\n\n\t\tif (value === \"true\") value = true\n\t\telse if (value === \"false\") value = false\n\n\t\tvar levels = key.split(/\\]\\[?|\\[/)\n\t\tvar cursor = data\n\t\tif (key.indexOf(\"[\") > -1) levels.pop()\n\t\tfor (var j = 0; j < levels.length; j++) {\n\t\t\tvar level = levels[j], nextLevel = levels[j + 1]\n\t\t\tvar isNumber = nextLevel == \"\" || !isNaN(parseInt(nextLevel, 10))\n\t\t\tif (level === \"\") {\n\t\t\t\tvar key = levels.slice(0, j).join()\n\t\t\t\tif (counters[key] == null) {\n\t\t\t\t\tcounters[key] = Array.isArray(cursor) ? cursor.length : 0\n\t\t\t\t}\n\t\t\t\tlevel = counters[key]++\n\t\t\t}\n\t\t\t// Disallow direct prototype pollution\n\t\t\telse if (level === \"__proto__\") break\n\t\t\tif (j === levels.length - 1) cursor[level] = value\n\t\t\telse {\n\t\t\t\t// Read own properties exclusively to disallow indirect\n\t\t\t\t// prototype pollution\n\t\t\t\tvar desc = Object.getOwnPropertyDescriptor(cursor, level)\n\t\t\t\tif (desc != null) desc = desc.value\n\t\t\t\tif (desc == null) cursor[level] = desc = isNumber ? [] : {}\n\t\t\t\tcursor = desc\n\t\t\t}\n\t\t}\n\t}\n\treturn data\n}\n","\"use strict\"\n\nvar parseQueryString = require(\"../querystring/parse\")\n\n// Returns `{path, params}` from `url`\nmodule.exports = function(url) {\n\tvar queryIndex = url.indexOf(\"?\")\n\tvar hashIndex = url.indexOf(\"#\")\n\tvar queryEnd = hashIndex < 0 ? url.length : hashIndex\n\tvar pathEnd = queryIndex < 0 ? queryEnd : queryIndex\n\tvar path = url.slice(0, pathEnd).replace(/\\/{2,}/g, \"/\")\n\n\tif (!path) path = \"/\"\n\telse {\n\t\tif (path[0] !== \"/\") path = \"/\" + path\n\t\tif (path.length > 1 && path[path.length - 1] === \"/\") path = path.slice(0, -1)\n\t}\n\treturn {\n\t\tpath: path,\n\t\tparams: queryIndex < 0\n\t\t\t? {}\n\t\t\t: parseQueryString(url.slice(queryIndex + 1, queryEnd)),\n\t}\n}\n","\"use strict\"\n\nvar parsePathname = require(\"./parse\")\n\n// Compiles a template into a function that takes a resolved path (without query\n// strings) and returns an object containing the template parameters with their\n// parsed values. This expects the input of the compiled template to be the\n// output of `parsePathname`. Note that it does *not* remove query parameters\n// specified in the template.\nmodule.exports = function(template) {\n\tvar templateData = parsePathname(template)\n\tvar templateKeys = Object.keys(templateData.params)\n\tvar keys = []\n\tvar regexp = new RegExp(\"^\" + templateData.path.replace(\n\t\t// I escape literal text so people can use things like `:file.:ext` or\n\t\t// `:lang-:locale` in routes. This is all merged into one pass so I\n\t\t// don't also accidentally escape `-` and make it harder to detect it to\n\t\t// ban it from template parameters.\n\t\t/:([^\\/.-]+)(\\.{3}|\\.(?!\\.)|-)?|[\\\\^$*+.()|\\[\\]{}]/g,\n\t\tfunction(m, key, extra) {\n\t\t\tif (key == null) return \"\\\\\" + m\n\t\t\tkeys.push({k: key, r: extra === \"...\"})\n\t\t\tif (extra === \"...\") return \"(.*)\"\n\t\t\tif (extra === \".\") return \"([^/]+)\\\\.\"\n\t\t\treturn \"([^/]+)\" + (extra || \"\")\n\t\t}\n\t) + \"$\")\n\treturn function(data) {\n\t\t// First, check the params. Usually, there isn't any, and it's just\n\t\t// checking a static set.\n\t\tfor (var i = 0; i < templateKeys.length; i++) {\n\t\t\tif (templateData.params[templateKeys[i]] !== data.params[templateKeys[i]]) return false\n\t\t}\n\t\t// If no interpolations exist, let's skip all the ceremony\n\t\tif (!keys.length) return regexp.test(data.path)\n\t\tvar values = regexp.exec(data.path)\n\t\tif (values == null) return false\n\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\tdata.params[keys[i].k] = keys[i].r ? values[i + 1] : decodeURIComponent(values[i + 1])\n\t\t}\n\t\treturn true\n\t}\n}\n","\"use strict\"\n\nvar Vnode = require(\"../render/vnode\")\nvar m = require(\"../render/hyperscript\")\nvar Promise = require(\"../promise/promise\")\n\nvar buildPathname = require(\"../pathname/build\")\nvar parsePathname = require(\"../pathname/parse\")\nvar compileTemplate = require(\"../pathname/compileTemplate\")\nvar assign = require(\"../pathname/assign\")\n\nvar sentinel = {}\n\nmodule.exports = function($window, mountRedraw) {\n\tvar fireAsync\n\n\tfunction setPath(path, data, options) {\n\t\tpath = buildPathname(path, data)\n\t\tif (fireAsync != null) {\n\t\t\tfireAsync()\n\t\t\tvar state = options ? options.state : null\n\t\t\tvar title = options ? options.title : null\n\t\t\tif (options && options.replace) $window.history.replaceState(state, title, route.prefix + path)\n\t\t\telse $window.history.pushState(state, title, route.prefix + path)\n\t\t}\n\t\telse {\n\t\t\t$window.location.href = route.prefix + path\n\t\t}\n\t}\n\n\tvar currentResolver = sentinel, component, attrs, currentPath, lastUpdate\n\n\tvar SKIP = route.SKIP = {}\n\n\tfunction route(root, defaultRoute, routes) {\n\t\tif (root == null) throw new Error(\"Ensure the DOM element that was passed to `m.route` is not undefined\")\n\t\t// 0 = start\n\t\t// 1 = init\n\t\t// 2 = ready\n\t\tvar state = 0\n\n\t\tvar compiled = Object.keys(routes).map(function(route) {\n\t\t\tif (route[0] !== \"/\") throw new SyntaxError(\"Routes must start with a `/`\")\n\t\t\tif ((/:([^\\/\\.-]+)(\\.{3})?:/).test(route)) {\n\t\t\t\tthrow new SyntaxError(\"Route parameter names must be separated with either `/`, `.`, or `-`\")\n\t\t\t}\n\t\t\treturn {\n\t\t\t\troute: route,\n\t\t\t\tcomponent: routes[route],\n\t\t\t\tcheck: compileTemplate(route),\n\t\t\t}\n\t\t})\n\t\tvar callAsync = typeof setImmediate === \"function\" ? setImmediate : setTimeout\n\t\tvar p = Promise.resolve()\n\t\tvar scheduled = false\n\t\tvar onremove\n\n\t\tfireAsync = null\n\n\t\tif (defaultRoute != null) {\n\t\t\tvar defaultData = parsePathname(defaultRoute)\n\n\t\t\tif (!compiled.some(function (i) { return i.check(defaultData) })) {\n\t\t\t\tthrow new ReferenceError(\"Default route doesn't match any known routes\")\n\t\t\t}\n\t\t}\n\n\t\tfunction resolveRoute() {\n\t\t\tscheduled = false\n\t\t\t// Consider the pathname holistically. The prefix might even be invalid,\n\t\t\t// but that's not our problem.\n\t\t\tvar prefix = $window.location.hash\n\t\t\tif (route.prefix[0] !== \"#\") {\n\t\t\t\tprefix = $window.location.search + prefix\n\t\t\t\tif (route.prefix[0] !== \"?\") {\n\t\t\t\t\tprefix = $window.location.pathname + prefix\n\t\t\t\t\tif (prefix[0] !== \"/\") prefix = \"/\" + prefix\n\t\t\t\t}\n\t\t\t}\n\t\t\t// This seemingly useless `.concat()` speeds up the tests quite a bit,\n\t\t\t// since the representation is consistently a relatively poorly\n\t\t\t// optimized cons string.\n\t\t\tvar path = prefix.concat()\n\t\t\t\t.replace(/(?:%[a-f89][a-f0-9])+/gim, decodeURIComponent)\n\t\t\t\t.slice(route.prefix.length)\n\t\t\tvar data = parsePathname(path)\n\n\t\t\tassign(data.params, $window.history.state)\n\n\t\t\tfunction fail() {\n\t\t\t\tif (path === defaultRoute) throw new Error(\"Could not resolve default route \" + defaultRoute)\n\t\t\t\tsetPath(defaultRoute, null, {replace: true})\n\t\t\t}\n\n\t\t\tloop(0)\n\t\t\tfunction loop(i) {\n\t\t\t\t// 0 = init\n\t\t\t\t// 1 = scheduled\n\t\t\t\t// 2 = done\n\t\t\t\tfor (; i < compiled.length; i++) {\n\t\t\t\t\tif (compiled[i].check(data)) {\n\t\t\t\t\t\tvar payload = compiled[i].component\n\t\t\t\t\t\tvar matchedRoute = compiled[i].route\n\t\t\t\t\t\tvar localComp = payload\n\t\t\t\t\t\tvar update = lastUpdate = function(comp) {\n\t\t\t\t\t\t\tif (update !== lastUpdate) return\n\t\t\t\t\t\t\tif (comp === SKIP) return loop(i + 1)\n\t\t\t\t\t\t\tcomponent = comp != null && (typeof comp.view === \"function\" || typeof comp === \"function\")? comp : \"div\"\n\t\t\t\t\t\t\tattrs = data.params, currentPath = path, lastUpdate = null\n\t\t\t\t\t\t\tcurrentResolver = payload.render ? payload : null\n\t\t\t\t\t\t\tif (state === 2) mountRedraw.redraw()\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tstate = 2\n\t\t\t\t\t\t\t\tmountRedraw.redraw.sync()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// There's no understating how much I *wish* I could\n\t\t\t\t\t\t// use `async`/`await` here...\n\t\t\t\t\t\tif (payload.view || typeof payload === \"function\") {\n\t\t\t\t\t\t\tpayload = {}\n\t\t\t\t\t\t\tupdate(localComp)\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (payload.onmatch) {\n\t\t\t\t\t\t\tp.then(function () {\n\t\t\t\t\t\t\t\treturn payload.onmatch(data.params, path, matchedRoute)\n\t\t\t\t\t\t\t}).then(update, fail)\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse update(\"div\")\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfail()\n\t\t\t}\n\t\t}\n\n\t\t// Set it unconditionally so `m.route.set` and `m.route.Link` both work,\n\t\t// even if neither `pushState` nor `hashchange` are supported. It's\n\t\t// cleared if `hashchange` is used, since that makes it automatically\n\t\t// async.\n\t\tfireAsync = function() {\n\t\t\tif (!scheduled) {\n\t\t\t\tscheduled = true\n\t\t\t\tcallAsync(resolveRoute)\n\t\t\t}\n\t\t}\n\n\t\tif (typeof $window.history.pushState === \"function\") {\n\t\t\tonremove = function() {\n\t\t\t\t$window.removeEventListener(\"popstate\", fireAsync, false)\n\t\t\t}\n\t\t\t$window.addEventListener(\"popstate\", fireAsync, false)\n\t\t} else if (route.prefix[0] === \"#\") {\n\t\t\tfireAsync = null\n\t\t\tonremove = function() {\n\t\t\t\t$window.removeEventListener(\"hashchange\", resolveRoute, false)\n\t\t\t}\n\t\t\t$window.addEventListener(\"hashchange\", resolveRoute, false)\n\t\t}\n\n\t\treturn mountRedraw.mount(root, {\n\t\t\tonbeforeupdate: function() {\n\t\t\t\tstate = state ? 2 : 1\n\t\t\t\treturn !(!state || sentinel === currentResolver)\n\t\t\t},\n\t\t\toncreate: resolveRoute,\n\t\t\tonremove: onremove,\n\t\t\tview: function() {\n\t\t\t\tif (!state || sentinel === currentResolver) return\n\t\t\t\t// Wrap in a fragment to preserve existing key semantics\n\t\t\t\tvar vnode = [Vnode(component, attrs.key, attrs)]\n\t\t\t\tif (currentResolver) vnode = currentResolver.render(vnode[0])\n\t\t\t\treturn vnode\n\t\t\t},\n\t\t})\n\t}\n\troute.set = function(path, data, options) {\n\t\tif (lastUpdate != null) {\n\t\t\toptions = options || {}\n\t\t\toptions.replace = true\n\t\t}\n\t\tlastUpdate = null\n\t\tsetPath(path, data, options)\n\t}\n\troute.get = function() {return currentPath}\n\troute.prefix = \"#!\"\n\troute.Link = {\n\t\tview: function(vnode) {\n\t\t\tvar options = vnode.attrs.options\n\t\t\t// Remove these so they don't get overwritten\n\t\t\tvar attrs = {}, onclick, href\n\t\t\tassign(attrs, vnode.attrs)\n\t\t\t// The first two are internal, but the rest are magic attributes\n\t\t\t// that need censored to not screw up rendering.\n\t\t\tattrs.selector = attrs.options = attrs.key = attrs.oninit =\n\t\t\tattrs.oncreate = attrs.onbeforeupdate = attrs.onupdate =\n\t\t\tattrs.onbeforeremove = attrs.onremove = null\n\n\t\t\t// Do this now so we can get the most current `href` and `disabled`.\n\t\t\t// Those attributes may also be specified in the selector, and we\n\t\t\t// should honor that.\n\t\t\tvar child = m(vnode.attrs.selector || \"a\", attrs, vnode.children)\n\n\t\t\t// Let's provide a *right* way to disable a route link, rather than\n\t\t\t// letting people screw up accessibility on accident.\n\t\t\t//\n\t\t\t// The attribute is coerced so users don't get surprised over\n\t\t\t// `disabled: 0` resulting in a button that's somehow routable\n\t\t\t// despite being visibly disabled.\n\t\t\tif (child.attrs.disabled = Boolean(child.attrs.disabled)) {\n\t\t\t\tchild.attrs.href = null\n\t\t\t\tchild.attrs[\"aria-disabled\"] = \"true\"\n\t\t\t\t// If you *really* do want to do this on a disabled link, use\n\t\t\t\t// an `oncreate` hook to add it.\n\t\t\t\tchild.attrs.onclick = null\n\t\t\t} else {\n\t\t\t\tonclick = child.attrs.onclick\n\t\t\t\thref = child.attrs.href\n\t\t\t\tchild.attrs.href = route.prefix + href\n\t\t\t\tchild.attrs.onclick = function(e) {\n\t\t\t\t\tvar result\n\t\t\t\t\tif (typeof onclick === \"function\") {\n\t\t\t\t\t\tresult = onclick.call(e.currentTarget, e)\n\t\t\t\t\t} else if (onclick == null || typeof onclick !== \"object\") {\n\t\t\t\t\t\t// do nothing\n\t\t\t\t\t} else if (typeof onclick.handleEvent === \"function\") {\n\t\t\t\t\t\tonclick.handleEvent(e)\n\t\t\t\t\t}\n\n\t\t\t\t\t// Adapted from React Router's implementation:\n\t\t\t\t\t// https://github.com/ReactTraining/react-router/blob/520a0acd48ae1b066eb0b07d6d4d1790a1d02482/packages/react-router-dom/modules/Link.js\n\t\t\t\t\t//\n\t\t\t\t\t// Try to be flexible and intuitive in how we handle links.\n\t\t\t\t\t// Fun fact: links aren't as obvious to get right as you\n\t\t\t\t\t// would expect. There's a lot more valid ways to click a\n\t\t\t\t\t// link than this, and one might want to not simply click a\n\t\t\t\t\t// link, but right click or command-click it to copy the\n\t\t\t\t\t// link target, etc. Nope, this isn't just for blind people.\n\t\t\t\t\tif (\n\t\t\t\t\t\t// Skip if `onclick` prevented default\n\t\t\t\t\t\tresult !== false && !e.defaultPrevented &&\n\t\t\t\t\t\t// Ignore everything but left clicks\n\t\t\t\t\t\t(e.button === 0 || e.which === 0 || e.which === 1) &&\n\t\t\t\t\t\t// Let the browser handle `target=_blank`, etc.\n\t\t\t\t\t\t(!e.currentTarget.target || e.currentTarget.target === \"_self\") &&\n\t\t\t\t\t\t// No modifier keys\n\t\t\t\t\t\t!e.ctrlKey && !e.metaKey && !e.shiftKey && !e.altKey\n\t\t\t\t\t) {\n\t\t\t\t\t\te.preventDefault()\n\t\t\t\t\t\te.redraw = false\n\t\t\t\t\t\troute.set(href, null, options)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn child\n\t\t},\n\t}\n\troute.param = function(key) {\n\t\treturn attrs && key != null ? attrs[key] : attrs\n\t}\n\n\treturn route\n}\n","\"use strict\"\n\nvar mountRedraw = require(\"./mount-redraw\")\n\nmodule.exports = require(\"./api/router\")(window, mountRedraw)\n","\"use strict\"\n\nvar hyperscript = require(\"./hyperscript\")\nvar request = require(\"./request\")\nvar mountRedraw = require(\"./mount-redraw\")\n\nvar m = function m() { return hyperscript.apply(this, arguments) }\nm.m = hyperscript\nm.trust = hyperscript.trust\nm.fragment = hyperscript.fragment\nm.mount = mountRedraw.mount\nm.route = require(\"./route\")\nm.render = require(\"./render\")\nm.redraw = mountRedraw.redraw\nm.request = request.request\nm.jsonp = request.jsonp\nm.parseQueryString = require(\"./querystring/parse\")\nm.buildQueryString = require(\"./querystring/build\")\nm.parsePathname = require(\"./pathname/parse\")\nm.buildPathname = require(\"./pathname/build\")\nm.vnode = require(\"./render/vnode\")\nm.PromisePolyfill = require(\"./promise/polyfill\")\n\nmodule.exports = m\n","function noop() {}\n\nfunction tagl(h) {\n  function createProxy(tagName) {\n    return new Proxy(noop, {\n      apply: (_, __, args) => h(tagName, [], ...args),\n      get: (_, className) => {\n        const classNames = [className]\n        const proxy = new Proxy(noop, {\n          get(_, className) {\n            classNames.push(className)\n            return proxy\n          },\n          apply(_, ___, args) {\n            return h(tagName, classNames, ...args)\n          },\n        })\n        return proxy\n      },\n    })\n  }\n\n  return new Proxy(component => createProxy(component), {\n    get: (components, tagName) => createProxy(components[tagName] || tagName),\n  })\n}\n\nexport default tagl\n","\"use strict\";\n\nvar _mithril = require(\"mithril\");\n\nvar _mithril2 = _interopRequireDefault(_mithril);\n\nvar _tagl = require(\"tagl\");\n\nvar _tagl2 = _interopRequireDefault(_tagl);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar camelToHyphen = function camelToHyphen(s) {\n  return s.replace(/([A-Z])/g, function (g) {\n    return \"-\" + g[0].toLowerCase();\n  });\n};\n\nvar tagl_hyperscript = function tagl_hyperscript() {\n  return (0, _tagl2.default)(function (tagName, classes) {\n    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    var cls = classes.map(camelToHyphen).join(\".\");\n    var fullTagName = cls.length ? [tagName, cls].join(\".\").replace(\".$\", \"#\") : tagName;\n    return _mithril2.default.apply(undefined, [fullTagName].concat(args));\n  });\n};\n\nif (true) {\n  module.exports = tagl_hyperscript;\n} else {\n  module.exports.tagl = tagl_hyperscript;\n  module.exports.a = tagl_hyperscript();\n  module.exports.abbr = tagl_hyperscript();\n  module.exports.acronym = tagl_hyperscript();\n  module.exports.address = tagl_hyperscript();\n  module.exports.applet = tagl_hyperscript();\n  module.exports.area = tagl_hyperscript();\n  module.exports.article = tagl_hyperscript();\n  module.exports.aside = tagl_hyperscript();\n  module.exports.audio = tagl_hyperscript();\n  module.exports.b = tagl_hyperscript();\n  module.exports.base = tagl_hyperscript();\n  module.exports.basefont = tagl_hyperscript();\n  module.exports.bdi = tagl_hyperscript();\n  module.exports.bdo = tagl_hyperscript();\n  module.exports.big = tagl_hyperscript();\n  module.exports.blockquote = tagl_hyperscript();\n  module.exports.body = tagl_hyperscript();\n  module.exports.br = tagl_hyperscript();\n  module.exports.button = tagl_hyperscript();\n  module.exports.canvas = tagl_hyperscript();\n  module.exports.caption = tagl_hyperscript();\n  module.exports.center = tagl_hyperscript();\n  module.exports.cite = tagl_hyperscript();\n  module.exports.code = tagl_hyperscript();\n  module.exports.col = tagl_hyperscript();\n  module.exports.colgroup = tagl_hyperscript();\n  module.exports.datalist = tagl_hyperscript();\n  module.exports.dd = tagl_hyperscript();\n  module.exports.del = tagl_hyperscript();\n  module.exports.details = tagl_hyperscript();\n  module.exports.dfn = tagl_hyperscript();\n  module.exports.dir = tagl_hyperscript();\n  module.exports.div = tagl_hyperscript();\n  module.exports.dl = tagl_hyperscript();\n  module.exports.dt = tagl_hyperscript();\n  module.exports.em = tagl_hyperscript();\n  module.exports.embed = tagl_hyperscript();\n  module.exports.fieldset = tagl_hyperscript();\n  module.exports.figcaption = tagl_hyperscript();\n  module.exports.figure = tagl_hyperscript();\n  module.exports.font = tagl_hyperscript();\n  module.exports.footer = tagl_hyperscript();\n  module.exports.form = tagl_hyperscript();\n  module.exports.frame = tagl_hyperscript();\n  module.exports.frameset = tagl_hyperscript();\n  module.exports.h1 = tagl_hyperscript();\n  module.exports.h2 = tagl_hyperscript();\n  module.exports.h3 = tagl_hyperscript();\n  module.exports.h4 = tagl_hyperscript();\n  module.exports.h5 = tagl_hyperscript();\n  module.exports.h6 = tagl_hyperscript();\n  module.exports.head = tagl_hyperscript();\n  module.exports.header = tagl_hyperscript();\n  module.exports.hgroup = tagl_hyperscript();\n  module.exports.hr = tagl_hyperscript();\n  module.exports.html = tagl_hyperscript();\n  module.exports.i = tagl_hyperscript();\n  module.exports.iframe = tagl_hyperscript();\n  module.exports.img = tagl_hyperscript();\n  module.exports.input = tagl_hyperscript();\n  module.exports.ins = tagl_hyperscript();\n  module.exports.kbd = tagl_hyperscript();\n  module.exports.keygen = tagl_hyperscript();\n  module.exports.label = tagl_hyperscript();\n  module.exports.legend = tagl_hyperscript();\n  module.exports.li = tagl_hyperscript();\n  module.exports.link = tagl_hyperscript();\n  module.exports.map = tagl_hyperscript();\n  module.exports.mark = tagl_hyperscript();\n  module.exports.menu = tagl_hyperscript();\n  module.exports.meta = tagl_hyperscript();\n  module.exports.meter = tagl_hyperscript();\n  module.exports.nav = tagl_hyperscript();\n  module.exports.noframes = tagl_hyperscript();\n  module.exports.noscript = tagl_hyperscript();\n  module.exports.object = tagl_hyperscript();\n  module.exports.ol = tagl_hyperscript();\n  module.exports.optgroup = tagl_hyperscript();\n  module.exports.option = tagl_hyperscript();\n  module.exports.output = tagl_hyperscript();\n  module.exports.p = tagl_hyperscript();\n  module.exports.param = tagl_hyperscript();\n  module.exports.pre = tagl_hyperscript();\n  module.exports.progress = tagl_hyperscript();\n  module.exports.q = tagl_hyperscript();\n  module.exports.rp = tagl_hyperscript();\n  module.exports.rt = tagl_hyperscript();\n  module.exports.ruby = tagl_hyperscript();\n  module.exports.s = tagl_hyperscript();\n  module.exports.samp = tagl_hyperscript();\n  module.exports.script = tagl_hyperscript();\n  module.exports.section = tagl_hyperscript();\n  module.exports.select = tagl_hyperscript();\n  module.exports.small = tagl_hyperscript();\n  module.exports.source = tagl_hyperscript();\n  module.exports.span = tagl_hyperscript();\n  module.exports.strike = tagl_hyperscript();\n  module.exports.strong = tagl_hyperscript();\n  module.exports.style = tagl_hyperscript();\n  module.exports.sub = tagl_hyperscript();\n  module.exports.summary = tagl_hyperscript();\n  module.exports.sup = tagl_hyperscript();\n  module.exports.table = tagl_hyperscript();\n  module.exports.tbody = tagl_hyperscript();\n  module.exports.td = tagl_hyperscript();\n  module.exports.textarea = tagl_hyperscript();\n  module.exports.tfoot = tagl_hyperscript();\n  module.exports.th = tagl_hyperscript();\n  module.exports.thead = tagl_hyperscript();\n  module.exports.time = tagl_hyperscript();\n  module.exports.tr = tagl_hyperscript();\n  module.exports.track = tagl_hyperscript();\n  module.exports.tt = tagl_hyperscript();\n  module.exports.u = tagl_hyperscript();\n  module.exports.ul = tagl_hyperscript();\n  module.exports.var_ = tagl_hyperscript();\n  module.exports.video = tagl_hyperscript();\n  module.exports.wbr = tagl_hyperscript();\n  module.exports.animate = tagl_hyperscript();\n  module.exports.animateMotion = tagl_hyperscript();\n  module.exports.animateTransform = tagl_hyperscript();\n  module.exports.circle = tagl_hyperscript();\n  module.exports.clipPath = tagl_hyperscript();\n  module.exports.colorProfile = tagl_hyperscript();\n  module.exports.defs = tagl_hyperscript();\n  module.exports.desc = tagl_hyperscript();\n  module.exports.discard = tagl_hyperscript();\n  module.exports.ellipse = tagl_hyperscript();\n  module.exports.feBlend = tagl_hyperscript();\n  module.exports.feColorMatrix = tagl_hyperscript();\n  module.exports.feComponentTransfer = tagl_hyperscript();\n  module.exports.feComposite = tagl_hyperscript();\n  module.exports.feConvolveMatrix = tagl_hyperscript();\n  module.exports.feDiffuseLighting = tagl_hyperscript();\n  module.exports.feDisplacementMap = tagl_hyperscript();\n  module.exports.feDistantLight = tagl_hyperscript();\n  module.exports.feDropShadow = tagl_hyperscript();\n  module.exports.feFlood = tagl_hyperscript();\n  module.exports.feFuncA = tagl_hyperscript();\n  module.exports.feFuncB = tagl_hyperscript();\n  module.exports.feFuncG = tagl_hyperscript();\n  module.exports.feFuncR = tagl_hyperscript();\n  module.exports.feGaussianBlur = tagl_hyperscript();\n  module.exports.feImage = tagl_hyperscript();\n  module.exports.feMerge = tagl_hyperscript();\n  module.exports.feMergeNode = tagl_hyperscript();\n  module.exports.feMorphology = tagl_hyperscript();\n  module.exports.feOffset = tagl_hyperscript();\n  module.exports.fePointLight = tagl_hyperscript();\n  module.exports.feSpecularLighting = tagl_hyperscript();\n  module.exports.feSpotLight = tagl_hyperscript();\n  module.exports.feTile = tagl_hyperscript();\n  module.exports.feTurbulence = tagl_hyperscript();\n  module.exports.filter = tagl_hyperscript();\n  module.exports.foreignObject = tagl_hyperscript();\n  module.exports.g = tagl_hyperscript();\n  module.exports.hatch = tagl_hyperscript();\n  module.exports.hatchpath = tagl_hyperscript();\n  module.exports.image = tagl_hyperscript();\n  module.exports.line = tagl_hyperscript();\n  module.exports.linearGradient = tagl_hyperscript();\n  module.exports.marker = tagl_hyperscript();\n  module.exports.mask = tagl_hyperscript();\n  module.exports.mesh = tagl_hyperscript();\n  module.exports.meshgradient = tagl_hyperscript();\n  module.exports.meshpatch = tagl_hyperscript();\n  module.exports.meshrow = tagl_hyperscript();\n  module.exports.metadata = tagl_hyperscript();\n  module.exports.mpath = tagl_hyperscript();\n  module.exports.path = tagl_hyperscript();\n  module.exports.pattern = tagl_hyperscript();\n  module.exports.polygon = tagl_hyperscript();\n  module.exports.polyline = tagl_hyperscript();\n  module.exports.radialGradient = tagl_hyperscript();\n  module.exports.rect = tagl_hyperscript();\n  module.exports.set = tagl_hyperscript();\n  module.exports.solidcolor = tagl_hyperscript();\n  module.exports.stop = tagl_hyperscript();\n  module.exports.svg = tagl_hyperscript();\n  module.exports.switch_ = tagl_hyperscript();\n  module.exports.symbol = tagl_hyperscript();\n  module.exports.text = tagl_hyperscript();\n  module.exports.textPath = tagl_hyperscript();\n  module.exports.tspan = tagl_hyperscript();\n  module.exports.unknown = tagl_hyperscript();\n  module.exports.use = tagl_hyperscript();\n  module.exports.view = tagl_hyperscript();\n  module.exports.math = tagl_hyperscript();\n  module.exports.maction = tagl_hyperscript();\n  module.exports.maligngroup = tagl_hyperscript();\n  module.exports.malignmark = tagl_hyperscript();\n  module.exports.menclose = tagl_hyperscript();\n  module.exports.merror = tagl_hyperscript();\n  module.exports.mfenced = tagl_hyperscript();\n  module.exports.mfrac = tagl_hyperscript();\n  module.exports.mglyph = tagl_hyperscript();\n  module.exports.mi = tagl_hyperscript();\n  module.exports.mlabeledtr = tagl_hyperscript();\n  module.exports.mlongdiv = tagl_hyperscript();\n  module.exports.mmultiscripts = tagl_hyperscript();\n  module.exports.mn = tagl_hyperscript();\n  module.exports.mo = tagl_hyperscript();\n  module.exports.mover = tagl_hyperscript();\n  module.exports.mpadded = tagl_hyperscript();\n  module.exports.mphantom = tagl_hyperscript();\n  module.exports.mroot = tagl_hyperscript();\n  module.exports.mrow = tagl_hyperscript();\n  module.exports.ms = tagl_hyperscript();\n  module.exports.mscarries = tagl_hyperscript();\n  module.exports.mscarry = tagl_hyperscript();\n  module.exports.msgroup = tagl_hyperscript();\n  module.exports.msline = tagl_hyperscript();\n  module.exports.mspace = tagl_hyperscript();\n  module.exports.msqrt = tagl_hyperscript();\n  module.exports.msrow = tagl_hyperscript();\n  module.exports.mstack = tagl_hyperscript();\n  module.exports.mstyle = tagl_hyperscript();\n  module.exports.msub = tagl_hyperscript();\n  module.exports.msup = tagl_hyperscript();\n  module.exports.msubsup = tagl_hyperscript();\n  module.exports.mtable = tagl_hyperscript();\n  module.exports.mtd = tagl_hyperscript();\n  module.exports.mtext = tagl_hyperscript();\n  module.exports.mtr = tagl_hyperscript();\n  module.exports.munder = tagl_hyperscript();\n  module.exports.munderover = tagl_hyperscript();\n  module.exports.semantics = tagl_hyperscript();\n  module.exports.annotation = tagl_hyperscript();\n  module.exports.annotationXml = tagl_hyperscript();\n  module.exports.m = _mithril2.default;\n}","import m from 'mithril';\nimport tagl from 'tagl-mithril';\nexport const {a}  = tagl(m);\nexport const {abbr}  = tagl(m);\nexport const {acronym}  = tagl(m);\nexport const {address}  = tagl(m);\nexport const {applet}  = tagl(m);\nexport const {area}  = tagl(m);\nexport const {article}  = tagl(m);\nexport const {aside}  = tagl(m);\nexport const {audio}  = tagl(m);\nexport const {b}  = tagl(m);\nexport const {base}  = tagl(m);\nexport const {basefont}  = tagl(m);\nexport const {bdi}  = tagl(m);\nexport const {bdo}  = tagl(m);\nexport const {big}  = tagl(m);\nexport const {blockquote}  = tagl(m);\nexport const {body}  = tagl(m);\nexport const {br}  = tagl(m);\nexport const {button}  = tagl(m);\nexport const {canvas}  = tagl(m);\nexport const {caption}  = tagl(m);\nexport const {center}  = tagl(m);\nexport const {cite}  = tagl(m);\nexport const {code}  = tagl(m);\nexport const {col}  = tagl(m);\nexport const {colgroup}  = tagl(m);\nexport const {datalist}  = tagl(m);\nexport const {dd}  = tagl(m);\nexport const {del}  = tagl(m);\nexport const {details}  = tagl(m);\nexport const {dfn}  = tagl(m);\nexport const {dir}  = tagl(m);\nexport const {div}  = tagl(m);\nexport const {dl}  = tagl(m);\nexport const {dt}  = tagl(m);\nexport const {em}  = tagl(m);\nexport const {embed}  = tagl(m);\nexport const {fieldset}  = tagl(m);\nexport const {figcaption}  = tagl(m);\nexport const {figure}  = tagl(m);\nexport const {font}  = tagl(m);\nexport const {footer}  = tagl(m);\nexport const {form}  = tagl(m);\nexport const {frame}  = tagl(m);\nexport const {frameset}  = tagl(m);\nexport const {h1}  = tagl(m);\nexport const {h2}  = tagl(m);\nexport const {h3}  = tagl(m);\nexport const {h4}  = tagl(m);\nexport const {h5}  = tagl(m);\nexport const {h6}  = tagl(m);\nexport const {head}  = tagl(m);\nexport const {header}  = tagl(m);\nexport const {hgroup}  = tagl(m);\nexport const {hr}  = tagl(m);\nexport const {html}  = tagl(m);\nexport const {i}  = tagl(m);\nexport const {iframe}  = tagl(m);\nexport const {img}  = tagl(m);\nexport const {input}  = tagl(m);\nexport const {ins}  = tagl(m);\nexport const {kbd}  = tagl(m);\nexport const {keygen}  = tagl(m);\nexport const {label}  = tagl(m);\nexport const {legend}  = tagl(m);\nexport const {li}  = tagl(m);\nexport const {link}  = tagl(m);\nexport const {map}  = tagl(m);\nexport const {mark}  = tagl(m);\nexport const {menu}  = tagl(m);\nexport const {meta}  = tagl(m);\nexport const {meter}  = tagl(m);\nexport const {nav}  = tagl(m);\nexport const {noframes}  = tagl(m);\nexport const {noscript}  = tagl(m);\nexport const {object}  = tagl(m);\nexport const {ol}  = tagl(m);\nexport const {optgroup}  = tagl(m);\nexport const {option}  = tagl(m);\nexport const {output}  = tagl(m);\nexport const {p}  = tagl(m);\nexport const {param}  = tagl(m);\nexport const {pre}  = tagl(m);\nexport const {progress}  = tagl(m);\nexport const {q}  = tagl(m);\nexport const {rp}  = tagl(m);\nexport const {rt}  = tagl(m);\nexport const {ruby}  = tagl(m);\nexport const {s}  = tagl(m);\nexport const {samp}  = tagl(m);\nexport const {script}  = tagl(m);\nexport const {section}  = tagl(m);\nexport const {select}  = tagl(m);\nexport const {small}  = tagl(m);\nexport const {source}  = tagl(m);\nexport const {span}  = tagl(m);\nexport const {strike}  = tagl(m);\nexport const {strong}  = tagl(m);\nexport const {style}  = tagl(m);\nexport const {sub}  = tagl(m);\nexport const {summary}  = tagl(m);\nexport const {sup}  = tagl(m);\nexport const {table}  = tagl(m);\nexport const {tbody}  = tagl(m);\nexport const {td}  = tagl(m);\nexport const {textarea}  = tagl(m);\nexport const {tfoot}  = tagl(m);\nexport const {th}  = tagl(m);\nexport const {thead}  = tagl(m);\nexport const {time}  = tagl(m);\nexport const {tr}  = tagl(m);\nexport const {track}  = tagl(m);\nexport const {tt}  = tagl(m);\nexport const {u}  = tagl(m);\nexport const {ul}  = tagl(m);\nexport const {var_}  = tagl(m);\nexport const {video}  = tagl(m);\nexport const {wbr}  = tagl(m);\nexport const {animate}  = tagl(m);\nexport const {animateMotion}  = tagl(m);\nexport const {animateTransform}  = tagl(m);\nexport const {circle}  = tagl(m);\nexport const {clipPath}  = tagl(m);\nexport const {colorProfile}  = tagl(m);\nexport const {defs}  = tagl(m);\nexport const {desc}  = tagl(m);\nexport const {discard}  = tagl(m);\nexport const {ellipse}  = tagl(m);\nexport const {feBlend}  = tagl(m);\nexport const {feColorMatrix}  = tagl(m);\nexport const {feComponentTransfer}  = tagl(m);\nexport const {feComposite}  = tagl(m);\nexport const {feConvolveMatrix}  = tagl(m);\nexport const {feDiffuseLighting}  = tagl(m);\nexport const {feDisplacementMap}  = tagl(m);\nexport const {feDistantLight}  = tagl(m);\nexport const {feDropShadow}  = tagl(m);\nexport const {feFlood}  = tagl(m);\nexport const {feFuncA}  = tagl(m);\nexport const {feFuncB}  = tagl(m);\nexport const {feFuncG}  = tagl(m);\nexport const {feFuncR}  = tagl(m);\nexport const {feGaussianBlur}  = tagl(m);\nexport const {feImage}  = tagl(m);\nexport const {feMerge}  = tagl(m);\nexport const {feMergeNode}  = tagl(m);\nexport const {feMorphology}  = tagl(m);\nexport const {feOffset}  = tagl(m);\nexport const {fePointLight}  = tagl(m);\nexport const {feSpecularLighting}  = tagl(m);\nexport const {feSpotLight}  = tagl(m);\nexport const {feTile}  = tagl(m);\nexport const {feTurbulence}  = tagl(m);\nexport const {filter}  = tagl(m);\nexport const {foreignObject}  = tagl(m);\nexport const {g}  = tagl(m);\nexport const {hatch}  = tagl(m);\nexport const {hatchpath}  = tagl(m);\nexport const {image}  = tagl(m);\nexport const {line}  = tagl(m);\nexport const {linearGradient}  = tagl(m);\nexport const {marker}  = tagl(m);\nexport const {mask}  = tagl(m);\nexport const {mesh}  = tagl(m);\nexport const {meshgradient}  = tagl(m);\nexport const {meshpatch}  = tagl(m);\nexport const {meshrow}  = tagl(m);\nexport const {metadata}  = tagl(m);\nexport const {mpath}  = tagl(m);\nexport const {path}  = tagl(m);\nexport const {pattern}  = tagl(m);\nexport const {polygon}  = tagl(m);\nexport const {polyline}  = tagl(m);\nexport const {radialGradient}  = tagl(m);\nexport const {rect}  = tagl(m);\nexport const {set}  = tagl(m);\nexport const {solidcolor}  = tagl(m);\nexport const {stop}  = tagl(m);\nexport const {svg}  = tagl(m);\nexport const {switch_}  = tagl(m);\nexport const {symbol}  = tagl(m);\nexport const {text}  = tagl(m);\nexport const {textPath}  = tagl(m);\nexport const {tspan}  = tagl(m);\nexport const {unknown}  = tagl(m);\nexport const {use}  = tagl(m);\nexport const {view}  = tagl(m);\nexport const {math}  = tagl(m);\nexport const {maction}  = tagl(m);\nexport const {maligngroup}  = tagl(m);\nexport const {malignmark}  = tagl(m);\nexport const {menclose}  = tagl(m);\nexport const {merror}  = tagl(m);\nexport const {mfenced}  = tagl(m);\nexport const {mfrac}  = tagl(m);\nexport const {mglyph}  = tagl(m);\nexport const {mi}  = tagl(m);\nexport const {mlabeledtr}  = tagl(m);\nexport const {mlongdiv}  = tagl(m);\nexport const {mmultiscripts}  = tagl(m);\nexport const {mn}  = tagl(m);\nexport const {mo}  = tagl(m);\nexport const {mover}  = tagl(m);\nexport const {mpadded}  = tagl(m);\nexport const {mphantom}  = tagl(m);\nexport const {mroot}  = tagl(m);\nexport const {mrow}  = tagl(m);\nexport const {ms}  = tagl(m);\nexport const {mscarries}  = tagl(m);\nexport const {mscarry}  = tagl(m);\nexport const {msgroup}  = tagl(m);\nexport const {msline}  = tagl(m);\nexport const {mspace}  = tagl(m);\nexport const {msqrt}  = tagl(m);\nexport const {msrow}  = tagl(m);\nexport const {mstack}  = tagl(m);\nexport const {mstyle}  = tagl(m);\nexport const {msub}  = tagl(m);\nexport const {msup}  = tagl(m);\nexport const {msubsup}  = tagl(m);\nexport const {mtable}  = tagl(m);\nexport const {mtd}  = tagl(m);\nexport const {mtext}  = tagl(m);\nexport const {mtr}  = tagl(m);\nexport const {munder}  = tagl(m);\nexport const {munderover}  = tagl(m);\nexport const {semantics}  = tagl(m);\nexport const {annotation}  = tagl(m);\nexport const {annotationXml} = tagl(m);\n","/* globals chrome: false */\n/* globals __dirname: false */\n/* globals require: false */\n/* globals Buffer: false */\n/* globals module: false */\n\n/**\n * Typo is a JavaScript implementation of a spellchecker using hunspell-style \n * dictionaries.\n */\n\nvar Typo;\n\n(function () {\n\"use strict\";\n\n/**\n * Typo constructor.\n *\n * @param {String} [dictionary] The locale code of the dictionary being used. e.g.,\n *                              \"en_US\". This is only used to auto-load dictionaries.\n * @param {String} [affData]    The data from the dictionary's .aff file. If omitted\n *                              and Typo.js is being used in a Chrome extension, the .aff\n *                              file will be loaded automatically from\n *                              lib/typo/dictionaries/[dictionary]/[dictionary].aff\n *                              In other environments, it will be loaded from\n *                              [settings.dictionaryPath]/dictionaries/[dictionary]/[dictionary].aff\n * @param {String} [wordsData]  The data from the dictionary's .dic file. If omitted\n *                              and Typo.js is being used in a Chrome extension, the .dic\n *                              file will be loaded automatically from\n *                              lib/typo/dictionaries/[dictionary]/[dictionary].dic\n *                              In other environments, it will be loaded from\n *                              [settings.dictionaryPath]/dictionaries/[dictionary]/[dictionary].dic\n * @param {Object} [settings]   Constructor settings. Available properties are:\n *                              {String} [dictionaryPath]: path to load dictionary from in non-chrome\n *                              environment.\n *                              {Object} [flags]: flag information.\n *                              {Boolean} [asyncLoad]: If true, affData and wordsData will be loaded\n *                              asynchronously.\n *                              {Function} [loadedCallback]: Called when both affData and wordsData\n *                              have been loaded. Only used if asyncLoad is set to true. The parameter\n *                              is the instantiated Typo object.\n *\n * @returns {Typo} A Typo object.\n */\n\nTypo = function (dictionary, affData, wordsData, settings) {\n\tsettings = settings || {};\n\n\tthis.dictionary = null;\n\t\n\tthis.rules = {};\n\tthis.dictionaryTable = {};\n\t\n\tthis.compoundRules = [];\n\tthis.compoundRuleCodes = {};\n\t\n\tthis.replacementTable = [];\n\t\n\tthis.flags = settings.flags || {}; \n\t\n\tthis.memoized = {};\n\n\tthis.loaded = false;\n\t\n\tvar self = this;\n\t\n\tvar path;\n\t\n\t// Loop-control variables.\n\tvar i, j, _len, _jlen;\n\t\n\tif (dictionary) {\n\t\tself.dictionary = dictionary;\n\t\t\n\t\t// If the data is preloaded, just setup the Typo object.\n\t\tif (affData && wordsData) {\n\t\t\tsetup();\n\t\t}\n\t\t// Loading data for Chrome extentions.\n\t\telse if (typeof window !== 'undefined' && 'chrome' in window && 'extension' in window.chrome && 'getURL' in window.chrome.extension) {\n\t\t\tif (settings.dictionaryPath) {\n\t\t\t\tpath = settings.dictionaryPath;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpath = \"typo/dictionaries\";\n\t\t\t}\n\t\t\t\n\t\t\tif (!affData) readDataFile(chrome.extension.getURL(path + \"/\" + dictionary + \"/\" + dictionary + \".aff\"), setAffData);\n\t\t\tif (!wordsData) readDataFile(chrome.extension.getURL(path + \"/\" + dictionary + \"/\" + dictionary + \".dic\"), setWordsData);\n\t\t}\n\t\telse {\n\t\t\tif (settings.dictionaryPath) {\n\t\t\t\tpath = settings.dictionaryPath;\n\t\t\t}\n\t\t\telse if (typeof __dirname !== 'undefined') {\n\t\t\t\tpath = __dirname + '/dictionaries';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpath = './dictionaries';\n\t\t\t}\n\t\t\t\n\t\t\tif (!affData) readDataFile(path + \"/\" + dictionary + \"/\" + dictionary + \".aff\", setAffData);\n\t\t\tif (!wordsData) readDataFile(path + \"/\" + dictionary + \"/\" + dictionary + \".dic\", setWordsData);\n\t\t}\n\t}\n\t\n\tfunction readDataFile(url, setFunc) {\n\t\tvar response = self._readFile(url, null, settings.asyncLoad);\n\t\t\n\t\tif (settings.asyncLoad) {\n\t\t\tresponse.then(function(data) {\n\t\t\t\tsetFunc(data);\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tsetFunc(response);\n\t\t}\n\t}\n\n\tfunction setAffData(data) {\n\t\taffData = data;\n\n\t\tif (wordsData) {\n\t\t\tsetup();\n\t\t}\n\t}\n\n\tfunction setWordsData(data) {\n\t\twordsData = data;\n\n\t\tif (affData) {\n\t\t\tsetup();\n\t\t}\n\t}\n\n\tfunction setup() {\n\t\tself.rules = self._parseAFF(affData);\n\t\t\n\t\t// Save the rule codes that are used in compound rules.\n\t\tself.compoundRuleCodes = {};\n\t\t\n\t\tfor (i = 0, _len = self.compoundRules.length; i < _len; i++) {\n\t\t\tvar rule = self.compoundRules[i];\n\t\t\t\n\t\t\tfor (j = 0, _jlen = rule.length; j < _jlen; j++) {\n\t\t\t\tself.compoundRuleCodes[rule[j]] = [];\n\t\t\t}\n\t\t}\n\t\t\n\t\t// If we add this ONLYINCOMPOUND flag to self.compoundRuleCodes, then _parseDIC\n\t\t// will do the work of saving the list of words that are compound-only.\n\t\tif (\"ONLYINCOMPOUND\" in self.flags) {\n\t\t\tself.compoundRuleCodes[self.flags.ONLYINCOMPOUND] = [];\n\t\t}\n\t\t\n\t\tself.dictionaryTable = self._parseDIC(wordsData);\n\t\t\n\t\t// Get rid of any codes from the compound rule codes that are never used \n\t\t// (or that were special regex characters).  Not especially necessary... \n\t\tfor (i in self.compoundRuleCodes) {\n\t\t\tif (self.compoundRuleCodes[i].length === 0) {\n\t\t\t\tdelete self.compoundRuleCodes[i];\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Build the full regular expressions for each compound rule.\n\t\t// I have a feeling (but no confirmation yet) that this method of \n\t\t// testing for compound words is probably slow.\n\t\tfor (i = 0, _len = self.compoundRules.length; i < _len; i++) {\n\t\t\tvar ruleText = self.compoundRules[i];\n\t\t\t\n\t\t\tvar expressionText = \"\";\n\t\t\t\n\t\t\tfor (j = 0, _jlen = ruleText.length; j < _jlen; j++) {\n\t\t\t\tvar character = ruleText[j];\n\t\t\t\t\n\t\t\t\tif (character in self.compoundRuleCodes) {\n\t\t\t\t\texpressionText += \"(\" + self.compoundRuleCodes[character].join(\"|\") + \")\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\texpressionText += character;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tself.compoundRules[i] = new RegExp(expressionText, \"i\");\n\t\t}\n\t\t\n\t\tself.loaded = true;\n\t\t\n\t\tif (settings.asyncLoad && settings.loadedCallback) {\n\t\t\tsettings.loadedCallback(self);\n\t\t}\n\t}\n\t\n\treturn this;\n};\n\nTypo.prototype = {\n\t/**\n\t * Loads a Typo instance from a hash of all of the Typo properties.\n\t *\n\t * @param object obj A hash of Typo properties, probably gotten from a JSON.parse(JSON.stringify(typo_instance)).\n\t */\n\t\n\tload : function (obj) {\n\t\tfor (var i in obj) {\n\t\t\tif (obj.hasOwnProperty(i)) {\n\t\t\t\tthis[i] = obj[i];\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * Read the contents of a file.\n\t * \n\t * @param {String} path The path (relative) to the file.\n\t * @param {String} [charset=\"ISO8859-1\"] The expected charset of the file\n\t * @param {Boolean} async If true, the file will be read asynchronously. For node.js this does nothing, all\n\t *        files are read synchronously.\n\t * @returns {String} The file data if async is false, otherwise a promise object. If running node.js, the data is\n\t *          always returned.\n\t */\n\t\n\t_readFile : function (path, charset, async) {\n\t\tcharset = charset || \"utf8\";\n\t\t\n\t\tif (typeof XMLHttpRequest !== 'undefined') {\n\t\t\tvar promise;\n\t\t\tvar req = new XMLHttpRequest();\n\t\t\treq.open(\"GET\", path, async);\n\t\t\t\n\t\t\tif (async) {\n\t\t\t\tpromise = new Promise(function(resolve, reject) {\n\t\t\t\t\treq.onload = function() {\n\t\t\t\t\t\tif (req.status === 200) {\n\t\t\t\t\t\t\tresolve(req.responseText);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\treject(req.statusText);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\treq.onerror = function() {\n\t\t\t\t\t\treject(req.statusText);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\n\t\t\tif (req.overrideMimeType)\n\t\t\t\treq.overrideMimeType(\"text/plain; charset=\" + charset);\n\t\t\n\t\t\treq.send(null);\n\t\t\t\n\t\t\treturn async ? promise : req.responseText;\n\t\t}\n\t\telse if (typeof require !== 'undefined') {\n\t\t\t// Node.js\n\t\t\tvar fs = require(\"fs\");\n\t\t\t\n\t\t\ttry {\n\t\t\t\tif (fs.existsSync(path)) {\n\t\t\t\t\treturn fs.readFileSync(path, charset);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconsole.log(\"Path \" + path + \" does not exist.\");\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(e);\n\t\t\t\treturn '';\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/**\n\t * Parse the rules out from a .aff file.\n\t *\n\t * @param {String} data The contents of the affix file.\n\t * @returns object The rules from the file.\n\t */\n\t\n\t_parseAFF : function (data) {\n\t\tvar rules = {};\n\t\t\n\t\tvar line, subline, numEntries, lineParts;\n\t\tvar i, j, _len, _jlen;\n\t\t\n\t\t// Remove comment lines\n\t\tdata = this._removeAffixComments(data);\n\t\t\n\t\tvar lines = data.split(/\\r?\\n/);\n\t\t\n\t\tfor (i = 0, _len = lines.length; i < _len; i++) {\n\t\t\tline = lines[i];\n\t\t\t\n\t\t\tvar definitionParts = line.split(/\\s+/);\n\t\t\t\n\t\t\tvar ruleType = definitionParts[0];\n\t\t\t\n\t\t\tif (ruleType == \"PFX\" || ruleType == \"SFX\") {\n\t\t\t\tvar ruleCode = definitionParts[1];\n\t\t\t\tvar combineable = definitionParts[2];\n\t\t\t\tnumEntries = parseInt(definitionParts[3], 10);\n\t\t\t\t\n\t\t\t\tvar entries = [];\n\t\t\t\t\n\t\t\t\tfor (j = i + 1, _jlen = i + 1 + numEntries; j < _jlen; j++) {\n\t\t\t\t\tsubline = lines[j];\n\t\t\t\t\t\n\t\t\t\t\tlineParts = subline.split(/\\s+/);\n\t\t\t\t\tvar charactersToRemove = lineParts[2];\n\t\t\t\t\t\n\t\t\t\t\tvar additionParts = lineParts[3].split(\"/\");\n\t\t\t\t\t\n\t\t\t\t\tvar charactersToAdd = additionParts[0];\n\t\t\t\t\tif (charactersToAdd === \"0\") charactersToAdd = \"\";\n\t\t\t\t\t\n\t\t\t\t\tvar continuationClasses = this.parseRuleCodes(additionParts[1]);\n\t\t\t\t\t\n\t\t\t\t\tvar regexToMatch = lineParts[4];\n\t\t\t\t\t\n\t\t\t\t\tvar entry = {};\n\t\t\t\t\tentry.add = charactersToAdd;\n\t\t\t\t\t\n\t\t\t\t\tif (continuationClasses.length > 0) entry.continuationClasses = continuationClasses;\n\t\t\t\t\t\n\t\t\t\t\tif (regexToMatch !== \".\") {\n\t\t\t\t\t\tif (ruleType === \"SFX\") {\n\t\t\t\t\t\t\tentry.match = new RegExp(regexToMatch + \"$\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tentry.match = new RegExp(\"^\" + regexToMatch);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (charactersToRemove != \"0\") {\n\t\t\t\t\t\tif (ruleType === \"SFX\") {\n\t\t\t\t\t\t\tentry.remove = new RegExp(charactersToRemove  + \"$\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tentry.remove = charactersToRemove;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tentries.push(entry);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\trules[ruleCode] = { \"type\" : ruleType, \"combineable\" : (combineable == \"Y\"), \"entries\" : entries };\n\t\t\t\t\n\t\t\t\ti += numEntries;\n\t\t\t}\n\t\t\telse if (ruleType === \"COMPOUNDRULE\") {\n\t\t\t\tnumEntries = parseInt(definitionParts[1], 10);\n\t\t\t\t\n\t\t\t\tfor (j = i + 1, _jlen = i + 1 + numEntries; j < _jlen; j++) {\n\t\t\t\t\tline = lines[j];\n\t\t\t\t\t\n\t\t\t\t\tlineParts = line.split(/\\s+/);\n\t\t\t\t\tthis.compoundRules.push(lineParts[1]);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ti += numEntries;\n\t\t\t}\n\t\t\telse if (ruleType === \"REP\") {\n\t\t\t\tlineParts = line.split(/\\s+/);\n\t\t\t\t\n\t\t\t\tif (lineParts.length === 3) {\n\t\t\t\t\tthis.replacementTable.push([ lineParts[1], lineParts[2] ]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// ONLYINCOMPOUND\n\t\t\t\t// COMPOUNDMIN\n\t\t\t\t// FLAG\n\t\t\t\t// KEEPCASE\n\t\t\t\t// NEEDAFFIX\n\t\t\t\t\n\t\t\t\tthis.flags[ruleType] = definitionParts[1];\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn rules;\n\t},\n\t\n\t/**\n\t * Removes comment lines and then cleans up blank lines and trailing whitespace.\n\t *\n\t * @param {String} data The data from an affix file.\n\t * @return {String} The cleaned-up data.\n\t */\n\t\n\t_removeAffixComments : function (data) {\n\t\t// Remove comments\n\t\t// This used to remove any string starting with '#' up to the end of the line,\n\t\t// but some COMPOUNDRULE definitions include '#' as part of the rule.\n\t\t// I haven't seen any affix files that use comments on the same line as real data,\n\t\t// so I don't think this will break anything.\n\t\tdata = data.replace(/^\\s*#.*$/mg, \"\");\n\t\t\n\t\t// Trim each line\n\t\tdata = data.replace(/^\\s\\s*/m, '').replace(/\\s\\s*$/m, '');\n\t\t\n\t\t// Remove blank lines.\n\t\tdata = data.replace(/\\n{2,}/g, \"\\n\");\n\t\t\n\t\t// Trim the entire string\n\t\tdata = data.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n\t\t\n\t\treturn data;\n\t},\n\t\n\t/**\n\t * Parses the words out from the .dic file.\n\t *\n\t * @param {String} data The data from the dictionary file.\n\t * @returns object The lookup table containing all of the words and\n\t *                 word forms from the dictionary.\n\t */\n\t\n\t_parseDIC : function (data) {\n\t\tdata = this._removeDicComments(data);\n\t\t\n\t\tvar lines = data.split(/\\r?\\n/);\n\t\tvar dictionaryTable = {};\n\t\t\n\t\tfunction addWord(word, rules) {\n\t\t\t// Some dictionaries will list the same word multiple times with different rule sets.\n\t\t\tif (!dictionaryTable.hasOwnProperty(word)) {\n\t\t\t\tdictionaryTable[word] = null;\n\t\t\t}\n\t\t\t\n\t\t\tif (rules.length > 0) {\n\t\t\t\tif (dictionaryTable[word] === null) {\n\t\t\t\t\tdictionaryTable[word] = [];\n\t\t\t\t}\n\n\t\t\t\tdictionaryTable[word].push(rules);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// The first line is the number of words in the dictionary.\n\t\tfor (var i = 1, _len = lines.length; i < _len; i++) {\n\t\t\tvar line = lines[i];\n\t\t\t\n\t\t\tif (!line) {\n\t\t\t\t// Ignore empty lines.\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar parts = line.split(\"/\", 2);\n\t\t\t\n\t\t\tvar word = parts[0];\n\n\t\t\t// Now for each affix rule, generate that form of the word.\n\t\t\tif (parts.length > 1) {\n\t\t\t\tvar ruleCodesArray = this.parseRuleCodes(parts[1]);\n\t\t\t\t\n\t\t\t\t// Save the ruleCodes for compound word situations.\n\t\t\t\tif (!(\"NEEDAFFIX\" in this.flags) || ruleCodesArray.indexOf(this.flags.NEEDAFFIX) == -1) {\n\t\t\t\t\taddWord(word, ruleCodesArray);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor (var j = 0, _jlen = ruleCodesArray.length; j < _jlen; j++) {\n\t\t\t\t\tvar code = ruleCodesArray[j];\n\t\t\t\t\t\n\t\t\t\t\tvar rule = this.rules[code];\n\t\t\t\t\t\n\t\t\t\t\tif (rule) {\n\t\t\t\t\t\tvar newWords = this._applyRule(word, rule);\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor (var ii = 0, _iilen = newWords.length; ii < _iilen; ii++) {\n\t\t\t\t\t\t\tvar newWord = newWords[ii];\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\taddWord(newWord, []);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (rule.combineable) {\n\t\t\t\t\t\t\t\tfor (var k = j + 1; k < _jlen; k++) {\n\t\t\t\t\t\t\t\t\tvar combineCode = ruleCodesArray[k];\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tvar combineRule = this.rules[combineCode];\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (combineRule) {\n\t\t\t\t\t\t\t\t\t\tif (combineRule.combineable && (rule.type != combineRule.type)) {\n\t\t\t\t\t\t\t\t\t\t\tvar otherNewWords = this._applyRule(newWord, combineRule);\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tfor (var iii = 0, _iiilen = otherNewWords.length; iii < _iiilen; iii++) {\n\t\t\t\t\t\t\t\t\t\t\t\tvar otherNewWord = otherNewWords[iii];\n\t\t\t\t\t\t\t\t\t\t\t\taddWord(otherNewWord, []);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (code in this.compoundRuleCodes) {\n\t\t\t\t\t\tthis.compoundRuleCodes[code].push(word);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\taddWord(word.trim(), []);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn dictionaryTable;\n\t},\n\t\n\t\n\t/**\n\t * Removes comment lines and then cleans up blank lines and trailing whitespace.\n\t *\n\t * @param {String} data The data from a .dic file.\n\t * @return {String} The cleaned-up data.\n\t */\n\t\n\t_removeDicComments : function (data) {\n\t\t// I can't find any official documentation on it, but at least the de_DE\n\t\t// dictionary uses tab-indented lines as comments.\n\t\t\n\t\t// Remove comments\n\t\tdata = data.replace(/^\\t.*$/mg, \"\");\n\t\t\n\t\treturn data;\n\t},\n\t\n\tparseRuleCodes : function (textCodes) {\n\t\tif (!textCodes) {\n\t\t\treturn [];\n\t\t}\n\t\telse if (!(\"FLAG\" in this.flags)) {\n\t\t\treturn textCodes.split(\"\");\n\t\t}\n\t\telse if (this.flags.FLAG === \"long\") {\n\t\t\tvar flags = [];\n\t\t\t\n\t\t\tfor (var i = 0, _len = textCodes.length; i < _len; i += 2) {\n\t\t\t\tflags.push(textCodes.substr(i, 2));\n\t\t\t}\n\t\t\t\n\t\t\treturn flags;\n\t\t}\n\t\telse if (this.flags.FLAG === \"num\") {\n\t\t\treturn textCodes.split(\",\");\n\t\t}\n\t},\n\t\n\t/**\n\t * Applies an affix rule to a word.\n\t *\n\t * @param {String} word The base word.\n\t * @param {Object} rule The affix rule.\n\t * @returns {String[]} The new words generated by the rule.\n\t */\n\t\n\t_applyRule : function (word, rule) {\n\t\tvar entries = rule.entries;\n\t\tvar newWords = [];\n\t\t\n\t\tfor (var i = 0, _len = entries.length; i < _len; i++) {\n\t\t\tvar entry = entries[i];\n\t\t\t\n\t\t\tif (!entry.match || word.match(entry.match)) {\n\t\t\t\tvar newWord = word;\n\t\t\t\t\n\t\t\t\tif (entry.remove) {\n\t\t\t\t\tnewWord = newWord.replace(entry.remove, \"\");\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (rule.type === \"SFX\") {\n\t\t\t\t\tnewWord = newWord + entry.add;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnewWord = entry.add + newWord;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tnewWords.push(newWord);\n\t\t\t\t\n\t\t\t\tif (\"continuationClasses\" in entry) {\n\t\t\t\t\tfor (var j = 0, _jlen = entry.continuationClasses.length; j < _jlen; j++) {\n\t\t\t\t\t\tvar continuationRule = this.rules[entry.continuationClasses[j]];\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (continuationRule) {\n\t\t\t\t\t\t\tnewWords = newWords.concat(this._applyRule(newWord, continuationRule));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t/*\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// This shouldn't happen, but it does, at least in the de_DE dictionary.\n\t\t\t\t\t\t\t// I think the author mistakenly supplied lower-case rule codes instead \n\t\t\t\t\t\t\t// of upper-case.\n\t\t\t\t\t\t}\n\t\t\t\t\t\t*/\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn newWords;\n\t},\n\t\n\t/**\n\t * Checks whether a word or a capitalization variant exists in the current dictionary.\n\t * The word is trimmed and several variations of capitalizations are checked.\n\t * If you want to check a word without any changes made to it, call checkExact()\n\t *\n\t * @see http://blog.stevenlevithan.com/archives/faster-trim-javascript re:trimming function\n\t *\n\t * @param {String} aWord The word to check.\n\t * @returns {Boolean}\n\t */\n\t\n\tcheck : function (aWord) {\n\t\tif (!this.loaded) {\n\t\t\tthrow \"Dictionary not loaded.\";\n\t\t}\n\t\t\n\t\t// Remove leading and trailing whitespace\n\t\tvar trimmedWord = aWord.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n\t\t\n\t\tif (this.checkExact(trimmedWord)) {\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\t// The exact word is not in the dictionary.\n\t\tif (trimmedWord.toUpperCase() === trimmedWord) {\n\t\t\t// The word was supplied in all uppercase.\n\t\t\t// Check for a capitalized form of the word.\n\t\t\tvar capitalizedWord = trimmedWord[0] + trimmedWord.substring(1).toLowerCase();\n\t\t\t\n\t\t\tif (this.hasFlag(capitalizedWord, \"KEEPCASE\")) {\n\t\t\t\t// Capitalization variants are not allowed for this word.\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t\n\t\t\tif (this.checkExact(capitalizedWord)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar lowercaseWord = trimmedWord.toLowerCase();\n\t\t\n\t\tif (lowercaseWord !== trimmedWord) {\n\t\t\tif (this.hasFlag(lowercaseWord, \"KEEPCASE\")) {\n\t\t\t\t// Capitalization variants are not allowed for this word.\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t\n\t\t\t// Check for a lowercase form\n\t\t\tif (this.checkExact(lowercaseWord)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn false;\n\t},\n\t\n\t/**\n\t * Checks whether a word exists in the current dictionary.\n\t *\n\t * @param {String} word The word to check.\n\t * @returns {Boolean}\n\t */\n\t\n\tcheckExact : function (word) {\n\t\tif (!this.loaded) {\n\t\t\tthrow \"Dictionary not loaded.\";\n\t\t}\n\n\t\tvar ruleCodes = this.dictionaryTable[word];\n\t\t\n\t\tvar i, _len;\n\t\t\n\t\tif (typeof ruleCodes === 'undefined') {\n\t\t\t// Check if this might be a compound word.\n\t\t\tif (\"COMPOUNDMIN\" in this.flags && word.length >= this.flags.COMPOUNDMIN) {\n\t\t\t\tfor (i = 0, _len = this.compoundRules.length; i < _len; i++) {\n\t\t\t\t\tif (word.match(this.compoundRules[i])) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (ruleCodes === null) {\n\t\t\t// a null (but not undefined) value for an entry in the dictionary table\n\t\t\t// means that the word is in the dictionary but has no flags.\n\t\t\treturn true;\n\t\t}\n\t\telse if (typeof ruleCodes === 'object') { // this.dictionary['hasOwnProperty'] will be a function.\n\t\t\tfor (i = 0, _len = ruleCodes.length; i < _len; i++) {\n\t\t\t\tif (!this.hasFlag(word, \"ONLYINCOMPOUND\", ruleCodes[i])) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t},\n\t\n\t/**\n\t * Looks up whether a given word is flagged with a given flag.\n\t *\n\t * @param {String} word The word in question.\n\t * @param {String} flag The flag in question.\n\t * @return {Boolean}\n\t */\n\t \n\thasFlag : function (word, flag, wordFlags) {\n\t\tif (!this.loaded) {\n\t\t\tthrow \"Dictionary not loaded.\";\n\t\t}\n\n\t\tif (flag in this.flags) {\n\t\t\tif (typeof wordFlags === 'undefined') {\n\t\t\t\twordFlags = Array.prototype.concat.apply([], this.dictionaryTable[word]);\n\t\t\t}\n\t\t\t\n\t\t\tif (wordFlags && wordFlags.indexOf(this.flags[flag]) !== -1) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn false;\n\t},\n\t\n\t/**\n\t * Returns a list of suggestions for a misspelled word.\n\t *\n\t * @see http://www.norvig.com/spell-correct.html for the basis of this suggestor.\n\t * This suggestor is primitive, but it works.\n\t *\n\t * @param {String} word The misspelling.\n\t * @param {Number} [limit=5] The maximum number of suggestions to return.\n\t * @returns {String[]} The array of suggestions.\n\t */\n\t\n\talphabet : \"\",\n\t\n\tsuggest : function (word, limit) {\n\t\tif (!this.loaded) {\n\t\t\tthrow \"Dictionary not loaded.\";\n\t\t}\n\n\t\tlimit = limit || 5;\n\n\t\tif (this.memoized.hasOwnProperty(word)) {\n\t\t\tvar memoizedLimit = this.memoized[word]['limit'];\n\n\t\t\t// Only return the cached list if it's big enough or if there weren't enough suggestions\n\t\t\t// to fill a smaller limit.\n\t\t\tif (limit <= memoizedLimit || this.memoized[word]['suggestions'].length < memoizedLimit) {\n\t\t\t\treturn this.memoized[word]['suggestions'].slice(0, limit);\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (this.check(word)) return [];\n\t\t\n\t\t// Check the replacement table.\n\t\tfor (var i = 0, _len = this.replacementTable.length; i < _len; i++) {\n\t\t\tvar replacementEntry = this.replacementTable[i];\n\t\t\t\n\t\t\tif (word.indexOf(replacementEntry[0]) !== -1) {\n\t\t\t\tvar correctedWord = word.replace(replacementEntry[0], replacementEntry[1]);\n\t\t\t\t\n\t\t\t\tif (this.check(correctedWord)) {\n\t\t\t\t\treturn [ correctedWord ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar self = this;\n\t\tself.alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t\t\n\t\t/*\n\t\tif (!self.alphabet) {\n\t\t\t// Use the alphabet as implicitly defined by the words in the dictionary.\n\t\t\tvar alphaHash = {};\n\t\t\t\n\t\t\tfor (var i in self.dictionaryTable) {\n\t\t\t\tfor (var j = 0, _len = i.length; j < _len; j++) {\n\t\t\t\t\talphaHash[i[j]] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfor (var i in alphaHash) {\n\t\t\t\tself.alphabet += i;\n\t\t\t}\n\t\t\t\n\t\t\tvar alphaArray = self.alphabet.split(\"\");\n\t\t\talphaArray.sort();\n\t\t\tself.alphabet = alphaArray.join(\"\");\n\t\t}\n\t\t*/\n\t\t\n\t\t/**\n\t\t * Returns a hash keyed by all of the strings that can be made by making a single edit to the word (or words in) `words`\n\t\t * The value of each entry is the number of unique ways that the resulting word can be made.\n\t\t *\n\t\t * @arg mixed words Either a hash keyed by words or a string word to operate on.\n\t\t * @arg bool known_only Whether this function should ignore strings that are not in the dictionary.\n\t\t */\n\t\tfunction edits1(words, known_only) {\n\t\t\tvar rv = {};\n\t\t\t\n\t\t\tvar i, j, _iilen, _len, _jlen, _edit;\n\t\t\t\n\t\t\tif (typeof words == 'string') {\n\t\t\t\tvar word = words;\n\t\t\t\twords = {};\n\t\t\t\twords[word] = true;\n\t\t\t}\n\n\t\t\tfor (var word in words) {\n\t\t\t\tfor (i = 0, _len = word.length + 1; i < _len; i++) {\n\t\t\t\t\tvar s = [ word.substring(0, i), word.substring(i) ];\n\t\t\t\t\n\t\t\t\t\tif (s[1]) {\n\t\t\t\t\t\t_edit = s[0] + s[1].substring(1);\n\n\t\t\t\t\t\tif (!known_only || self.check(_edit)) {\n\t\t\t\t\t\t\tif (!(_edit in rv)) {\n\t\t\t\t\t\t\t\trv[_edit] = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\trv[_edit] += 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Eliminate transpositions of identical letters\n\t\t\t\t\tif (s[1].length > 1 && s[1][1] !== s[1][0]) {\n\t\t\t\t\t\t_edit = s[0] + s[1][1] + s[1][0] + s[1].substring(2);\n\n\t\t\t\t\t\tif (!known_only || self.check(_edit)) {\n\t\t\t\t\t\t\tif (!(_edit in rv)) {\n\t\t\t\t\t\t\t\trv[_edit] = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\trv[_edit] += 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (s[1]) {\n\t\t\t\t\t\tfor (j = 0, _jlen = self.alphabet.length; j < _jlen; j++) {\n\t\t\t\t\t\t\t// Eliminate replacement of a letter by itself\n\t\t\t\t\t\t\tif (self.alphabet[j] != s[1].substring(0,1)){\n\t\t\t\t\t\t\t\t_edit = s[0] + self.alphabet[j] + s[1].substring(1);\n\n\t\t\t\t\t\t\t\tif (!known_only || self.check(_edit)) {\n\t\t\t\t\t\t\t\t\tif (!(_edit in rv)) {\n\t\t\t\t\t\t\t\t\t\trv[_edit] = 1;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\trv[_edit] += 1;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (s[1]) {\n\t\t\t\t\t\tfor (j = 0, _jlen = self.alphabet.length; j < _jlen; j++) {\n\t\t\t\t\t\t\t_edit = s[0] + self.alphabet[j] + s[1];\n\n\t\t\t\t\t\t\tif (!known_only || self.check(_edit)) {\n\t\t\t\t\t\t\t\tif (!(_edit in rv)) {\n\t\t\t\t\t\t\t\t\trv[_edit] = 1;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\trv[_edit] += 1;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn rv;\n\t\t}\n\n\t\tfunction correct(word) {\n\t\t\t// Get the edit-distance-1 and edit-distance-2 forms of this word.\n\t\t\tvar ed1 = edits1(word);\n\t\t\tvar ed2 = edits1(ed1, true);\n\t\t\t\n\t\t\t// Sort the edits based on how many different ways they were created.\n\t\t\tvar weighted_corrections = ed2;\n\t\t\t\n\t\t\tfor (var ed1word in ed1) {\n\t\t\t\tif (!self.check(ed1word)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (ed1word in weighted_corrections) {\n\t\t\t\t\tweighted_corrections[ed1word] += ed1[ed1word];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tweighted_corrections[ed1word] = ed1[ed1word];\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar i, _len;\n\n\t\t\tvar sorted_corrections = [];\n\t\t\t\n\t\t\tfor (i in weighted_corrections) {\n\t\t\t\tif (weighted_corrections.hasOwnProperty(i)) {\n\t\t\t\t\tsorted_corrections.push([ i, weighted_corrections[i] ]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction sorter(a, b) {\n\t\t\t\tvar a_val = a[1];\n\t\t\t\tvar b_val = b[1];\n\t\t\t\tif (a_val < b_val) {\n\t\t\t\t\treturn -1;\n\t\t\t\t} else if (a_val > b_val) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\t// @todo If a and b are equally weighted, add our own weight based on something like the key locations on this language's default keyboard.\n\t\t\t\treturn b[0].localeCompare(a[0]);\n\t\t\t}\n\t\t\t\n\t\t\tsorted_corrections.sort(sorter).reverse();\n\n\t\t\tvar rv = [];\n\n\t\t\tvar capitalization_scheme = \"lowercase\";\n\t\t\t\n\t\t\tif (word.toUpperCase() === word) {\n\t\t\t\tcapitalization_scheme = \"uppercase\";\n\t\t\t}\n\t\t\telse if (word.substr(0, 1).toUpperCase() + word.substr(1).toLowerCase() === word) {\n\t\t\t\tcapitalization_scheme = \"capitalized\";\n\t\t\t}\n\t\t\t\n\t\t\tvar working_limit = limit;\n\n\t\t\tfor (i = 0; i < Math.min(working_limit, sorted_corrections.length); i++) {\n\t\t\t\tif (\"uppercase\" === capitalization_scheme) {\n\t\t\t\t\tsorted_corrections[i][0] = sorted_corrections[i][0].toUpperCase();\n\t\t\t\t}\n\t\t\t\telse if (\"capitalized\" === capitalization_scheme) {\n\t\t\t\t\tsorted_corrections[i][0] = sorted_corrections[i][0].substr(0, 1).toUpperCase() + sorted_corrections[i][0].substr(1);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (!self.hasFlag(sorted_corrections[i][0], \"NOSUGGEST\") && rv.indexOf(sorted_corrections[i][0]) == -1) {\n\t\t\t\t\trv.push(sorted_corrections[i][0]);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// If one of the corrections is not eligible as a suggestion , make sure we still return the right number of suggestions.\n\t\t\t\t\tworking_limit++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn rv;\n\t\t}\n\t\t\n\t\tthis.memoized[word] = {\n\t\t\t'suggestions': correct(word),\n\t\t\t'limit': limit\n\t\t};\n\n\t\treturn this.memoized[word]['suggestions'];\n\t}\n};\n})();\n\n// Support for use as a node.js module.\nif (typeof module !== 'undefined') {\n\tmodule.exports = Typo;\n}\n","const rangeIncl = (S, E) => {\n    const result = [];\n    for (let i = S; i <= E; i++) {\n        result.push(i);\n    }\n    return result;\n};\nconst unique = arr => Object.keys(arr.reduce((acc, v) => {\n    acc[v] = 1;\n    return acc;\n}, {}));\nconst use = (v, f) => f(v)\nconst flatMap = (arr, f = e => e) => arr.reduce((acc, x) => acc.concat(f(x)), []);\n\nconst hasVowel = str => /.*[aeiouy].*/ig.test(str);\nconst reverse = str => str === '' ? str : (reverse(str.substring(1, str.length)) + str[0]);\n\nexport default {\n    rangeIncl,\n    unique,\n    use,\n    flatMap,\n    hasVowel,\n    reverse\n}","import m from 'mithril';\nimport Typo from 'typo-js';\n\nconst { sqrt, trunc, min, max } = Math;\n\nimport aff from './de-DE/de-DE.aff';\nimport dic from './de-DE/de-DE.dic';\nimport f from './f';\n\nlet callbacks = [];\n\nlet dictionary = null;\nlet words = null;\n\nlet complete = true;\n\nif (complete) {\n    setTimeout(() =>\n        fetch(aff)\n        .then(json => (json.text().then(\n            aff_text => {\n                fetch(dic).then(json => (json.text().then(\n                    dic_text => {\n                        dictionary = new Typo(\"de_DE\", aff_text, dic_text)\n                        words = (Object\n                            .keys(dictionary.dictionaryTable)\n                            //      .filter(e => e.length <= 8 && e.length >= 6)\n                            .filter(e => e !== e.toUpperCase())\n                            .map(e => e.toLowerCase())\n                            .filter(e => f.hasVowel(e) &&\n                                e.indexOf('-') < 0 &&\n                                e.indexOf('�') < 0 &&\n                                /*                                e.indexOf('ä') < 0 &&\n                                                                e.indexOf('ß') < 0 &&\n                                                                e.indexOf('ö') < 0 &&\n                                                                e.indexOf('ü') < 0 &&*/\n                                e.indexOf('.') < 0)\n                        )\n                        callbacks.forEach(cb => cb())\n                        m.redraw();\n                    }\n                )))\n            }))),\n        200\n    );\n} else {\n    dictionary = 'e'\n\n    words = ([\n        \"pflegen\",\n        \"legen\",\n        \"alias\",\n        \"elias\",\n        \"zwingen\",\n        \"bringen\",\n        \"zwei\",\n        \"brei\",\n        \"drei\",\n        \"dringen\",\n        \"pflaster\",\n        \"laster\",\n        \"tragen\",\n        \"lagen\",\n        \"ragen\",\n        \"tagen\",\n        \"behagen\"\n    ])\n}\n\nexport default {\n    words: () => words,\n    ready: () => !!dictionary,\n    whenReady: cb => callbacks.push(cb)\n}","import m from 'mithril';\nimport { div, a, pre, ul, li, table, th, tr, td, input, br, hr, h1, label, h2 } from './tags';\n\nimport solver from './solver';\nimport f from './f';\nconst { keys } = Object;\n\n\nlet byRest = null;\nlet shuttle = [];\nlet logs = [];\nlet firstWord = '';\nlet secondWord = '';\nlet selected = {};\nlet selected2 = {};\nlet showing = [];\n\nconst log = str => logs.unshift(str);\n\nconst split = word =>\n    f.use(word.search(/[aeiouy]/), pos => {\n        let begin = word.substring(0, pos);\n        let rest = word.substring(pos, word.length);\n        return { begin, rest };\n    });\n\nconst toRest = words => {\n    let result = {};\n    words.forEach(word => {\n        const { begin, rest } = split(word);\n        let arr = result[rest] || [];\n        if (arr.indexOf(begin) < 0)\n            arr.push(begin);\n        result[rest] = arr;\n    });\n    keys(result).forEach(rest => {\n        if (result[rest].length < 2)\n            delete result[rest];\n    })\n    return result;\n};\n\nsolver.whenReady(() => {\n    byRest = toRest(solver.words())\n});\n\nm.mount(document.body, {\n    view: vnode => {\n        return div.container([\n            h1('Schüttelreimsuche'),\n            solver.ready() ? [\n                label({ for: 'rhyme1' }, 'Erstes Reimwort eingeben'),\n                input.$rhyme1({\n                    oninput: e => {\n                        const { begin, rest } = selected = split(e.target.value.toLowerCase());\n                        showing = byRest[rest] || [];\n                        firstWord = begin + rest;\n                        selected2 = {};\n                        secondWord = '';\n                    }\n                }),\n                div(firstWord),\n                div(secondWord),\n                showing.map(begin => a.button({\n                    disabled: begin === selected.begin,\n                    onclick: e => {\n                        if (secondWord === '') {\n                            secondWord = begin + selected.rest;\n                            selected2 = { begin }\n                            showing = [];\n                            showing = keys(byRest).filter(key => {\n                                if (key === selected.rest)\n                                    return false;\n                                return f.use(byRest[key], begins => begins.indexOf(selected.begin) > 0 && begins.indexOf(begin) > 0);\n                            });\n                        }\n                    }\n                }, selected2.begin !== undefined ? [selected2.begin + begin, br(), selected.begin + begin] : begin)),\n                hr(),\n                h2('Wortschatzsuche'),\n                label({ for: 'words' }, 'Suche eingeben'),\n                input.$words({\n\n                    oninput: e => {\n                        shuttle = solver.words().filter(e_ => e_.indexOf(e.target.value) >= 0)\n                    }\n                }),\n                div(shuttle.join(', ')),\n            ] : 'Bitte warten, lade den Wortschatz...',\n            hr(),\n            a({ href: \"https://github.com/abulvenz/schuttelreimsuche\" }, 'Quelltext auf Github')\n        ]);\n    }\n});"]}